(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{1111:function(t,n,s){"use strict";s.r(n);var i=s(14),a=Object(i.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_74-config分布式配置中心介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_74-config分布式配置中心介绍"}},[t._v("#")]),t._v(" 74_Config分布式配置中心介绍")]),t._v(" "),n("p",[t._v("分布式系统面临的配置问题")]),t._v(" "),n("p",[t._v("微服务意味着要将单体应用中的业务拆分成一个个子服务，每个服务的粒度相对较小，因此系统中会出现大量的服务。由于每个服务都需要必要的配置信息才能运行，所以一套集中式的、动态的配置管理设施是必不可少的。")]),t._v(" "),n("p",[t._v("SpringCloud提供了ConfigServer来解决这个问题，我们每一个微服务自己带着一个application.yml，上百个配置文件的管理.……")]),t._v(" "),n("p",[t._v("是什么")]),t._v(" "),n("p",[n("img",{attrs:{src:s(590),alt:"image-20211229224543914"}})]),t._v(" "),n("p",[t._v("SpringCloud Config为微服务架构中的微服务提供集中化的外部配置支持，配置服务器为各个不同微服务应用的所有环境提供了一个中心化的外部配置。")]),t._v(" "),n("p",[t._v("怎么玩")]),t._v(" "),n("p",[t._v("SpringCloud Config分为服务端和客户端两部分。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("服务端也称为分布式配置中心，它是一个独立的微服务应用，用来连接配置服务器并为客户端提供获取配置信息，加密/解密信息等访问接口。\n\n客户端则是通过指定的配置中心来管理应用资源，以及与业务相关的配置内容，并在启动的时候从配置中心获取和加载配置信息配置服务器默认采用git来存储配置信息，这样就有助于对环境配置进行版本管理，并且可以通过git客户端工具来方便的管理和访问配置内容。\n")])])]),n("p",[t._v("能干嘛")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("1集中管理配置文件\n2不同环境不同配置，动态化的配置更新，分环境部署比如dev/test/prod/beta/release\n3运行期间动态调整配置，不再需要在每个服务部署的机器上编写配置文件，服务会向配置中心统一拉取配置自己的信息\n4当配置发生变动时，服务不需要重启即可感知到配置的变化并应用新的配置\n5将配置信息以REST接口的形式暴露 - post/crul访问刷新即可…\n")])])]),n("p",[t._v("与GitHub整合配置")]),t._v(" "),n("p",[t._v("由于SpringCloud Config默认使用Git来存储配置文件(也有其它方式,比如支持SVN和本地文件)，但最推荐的还是Git，而且使用的是http/https访问的形式。")])])}),[],!1,null,null,null);n.default=a.exports},590:function(t,n,s){t.exports=s.p+"assets/img/20211229224544.fe66f93c.png"}}]);