(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{437:function(t,s,a){t.exports=a.p+"assets/img/image-20230312072639148.1dea2a89.png"},438:function(t,s,a){t.exports=a.p+"assets/img/image-20230313032731060.385f7a69.png"},855:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("[toc]")]),t._v(" "),s("h1",{attrs:{id:"_1-mysql使用innodb引擎-请简述mysql索引的最左前缀如何优化orderby语句。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql使用innodb引擎-请简述mysql索引的最左前缀如何优化orderby语句。"}},[t._v("#")]),t._v(" 1 mysql使用innodb引擎，请简述mysql索引的最左前缀如何优化orderby语句。")]),t._v(" "),s("h2",{attrs:{id:"关键点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键点"}},[t._v("#")]),t._v(" 关键点：")]),t._v(" "),s("ol",[s("li",[t._v("如果排序字段不在索引列上，filesort有两种算法： mysql就要启动双路排序和单路排序")]),t._v(" "),s("li",[s("strong",[t._v("无过滤不索引")])]),t._v(" "),s("li",[t._v("order by非最左 filesort")]),t._v(" "),s("li",[t._v("顺序错 filesort")]),t._v(" "),s("li",[t._v("方向反  filesort")]),t._v(" "),s("li",[t._v("记不住多动手做实验，熟练使用explain，必要时使用optimizer_trace")]),t._v(" "),s("li",[t._v("更多参考尚硅谷mysql课程")])]),t._v(" "),s("h2",{attrs:{id:"答案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#答案"}},[t._v("#")]),t._v(" "),s("strong",[t._v("答案：")])]),t._v(" "),s("ol",[s("li",[t._v("首先要对sql进行分析检查必要的查询字段，过滤字段，排序字段是否按顺序创建好了索引")]),t._v(" "),s("li",[t._v("如果查询字段不再索引中可能会产生回表操作会导致filesort，降低性能")]),t._v(" "),s("li",[t._v("一定要有过滤字段不然不能使用索引")]),t._v(" "),s("li",[t._v("排序字段和索引顺序不一致会导致filesort，降低性能")]),t._v(" "),s("li",[t._v("多个字段排序时如果方向不一致也会导致filesort，降低性能")]),t._v(" "),s("li",[t._v("使用explain观察查询类型和索引利用情况")]),t._v(" "),s("li",[t._v("尽可能减少不必要的filesort")])]),t._v(" "),s("h2",{attrs:{id:"实验准备-向表中插入50w条数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实验准备-向表中插入50w条数据"}},[t._v("#")]),t._v(" "),s("strong",[t._v("实验准备")]),t._v("：向表中插入50w条数据")]),t._v(" "),s("p",[t._v("在做优化之前，要准备大量数据。接下来创建两张表，并往员工表里插入50W数据，部门表中插入1W条数据。")]),t._v(" "),s("p",[t._v("怎么快速插入50w条数据呢？ "),s("code",[t._v("存储过程")])]),t._v(" "),s("p",[t._v("怎么保证插入的数据不重复？"),s("code",[t._v("函数")])]),t._v(" "),s("p",[s("strong",[t._v("部门表：")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("id：自增长")])]),t._v(" "),s("li",[s("p",[t._v("deptName：随机字符串，允许重复")])]),t._v(" "),s("li",[s("p",[t._v("address：随机字符串，允许重复")])]),t._v(" "),s("li",[s("p",[t._v("CEO：1-50w之间的任意数字")])])]),t._v(" "),s("p",[s("strong",[t._v("员工表：")])]),t._v(" "),s("ul",[s("li",[t._v("id：自增长")]),t._v(" "),s("li",[t._v("empno：可以使用随机数字，或者"),s("code",[t._v("从1开始的自增数字")]),t._v("，不允许重复")]),t._v(" "),s("li",[t._v("name：随机生成，允许姓名重复")]),t._v(" "),s("li",[t._v("age：区间随机数")]),t._v(" "),s("li",[t._v("deptId：1-1w之间随机数")])]),t._v(" "),s("p",[t._v("**总结：**需要产生随机字符串和区间随机数的函数。")]),t._v(" "),s("h3",{attrs:{id:"创建表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建表"}},[t._v("#")]),t._v(" "),s("strong",[t._v("创建表")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("dept"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("deptName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tceo "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNODB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("empno"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("deptId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#CONSTRAINT `fk_dept_id` FOREIGN KEY (`deptId`) REFERENCES `t_dept` (`id`)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENGINE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNODB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AUTO_INCREMENT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"创建函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建函数"}},[t._v("#")]),t._v(" 创建函数")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 查看mysql是否允许创建函数：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SHOW")]),t._v(" VARIABLES "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'log_bin_trust_function_creators'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 命令开启：允许创建函数设置：（global-所有session都生效）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("GLOBAL")]),t._v(" log_bin_trust_function_creators"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 随机产生字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" rand_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("    \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" chars_str "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcdefghijklmnopqrstuvwxyzABCDEFJHIJKLMNOPQRSTUVWXYZ'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" return_str "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHILE")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DO")]),t._v("  \n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" return_str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("CONCAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("return_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("SUBSTRING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chars_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("FLOOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("RAND"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("52")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHILE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" return_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" $$\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 假如要删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- drop function rand_string;")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 用于随机产生区间数字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FUNCTION")]),t._v(" rand_num "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from_num "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("to_num "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURNS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("   \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" FLOOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("from_num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("RAND"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to_num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("from_num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RETURN")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 假如要删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- drop function rand_num;")]),t._v("\n")])])]),s("h3",{attrs:{id:"创建存储过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建存储过程"}},[t._v("#")]),t._v(" 创建存储过程")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 插入员工数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v("  insert_emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_num "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("  \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#set autocommit =0 把autocommit设置成0  ")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" autocommit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEAT")]),t._v("  \n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" emp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("empno"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NAME"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deptid "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("START")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rand_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rand_num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rand_num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\t\tUNTIL i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" max_num  \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- DELIMITER ;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- drop PROCEDURE insert_emp;")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 插入部门数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" insert_dept"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_num "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("  \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" autocommit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEAT")]),t._v("  \n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" dept "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" deptname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ceo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rand_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rand_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("rand_num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\t\tUNTIL i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" max_num  \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("REPEAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 删除")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- DELIMITER ;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- drop PROCEDURE insert_dept;")]),t._v("\n")])])]),s("h3",{attrs:{id:"调用存储过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用存储过程"}},[t._v("#")]),t._v(" 调用存储过程")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 执行存储过程，往dept表添加1万条数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" insert_dept"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 执行存储过程，往emp表添加50万条数据，编号从100000开始")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" insert_emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("h3",{attrs:{id:"批量删除表索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#批量删除表索引"}},[t._v("#")]),t._v(" 批量删除表索引")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 批量删除某个表上的所有索引")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" $$\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token identifier"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("proc_drop_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dbname "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tablename "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" done "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" ct "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" _index "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VARCHAR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" _cur "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CURSOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" index_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" information_schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("STATISTICS")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" table_schema"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dbname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" table_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tablename "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" seq_in_index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("AND")]),t._v(" index_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PRIMARY'")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CONTINUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("HANDLER")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" FOUND "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" done"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      \n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("OPEN")]),t._v(" _cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FETCH")]),t._v(" _cur "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" _index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHILE")]),t._v("  _index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<>")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DO")]),t._v(" \n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" CONCAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"drop index "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" on "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("tablename "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PREPARE")]),t._v(" sql_str "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXECUTE")]),t._v(" sql_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DEALLOCATE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PREPARE")]),t._v(" sql_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" _index"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FETCH")]),t._v(" _cur "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" _index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHILE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CLOSE")]),t._v(" _cur"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("$$\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 执行批量删除：dbname 库名称, tablename 表名称")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CALL")]),t._v(" proc_drop_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dbname"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tablename"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("h2",{attrs:{id:"最左前缀法则示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最左前缀法则示例"}},[t._v("#")]),t._v(" 最左前缀法则示例")]),t._v(" "),s("p",[t._v("假设index(a,b,c)")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Where语句")]),t._v(" "),s("th",[t._v("索引是否被使用")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("where a = 3")]),t._v(" "),s("td",[t._v("Y,使用到a")])]),t._v(" "),s("tr",[s("td",[t._v("where a =  3 and b = 5")]),t._v(" "),s("td",[t._v("Y,使用到a，b")])]),t._v(" "),s("tr",[s("td",[t._v("where a =  3 and b = 5 and c = 4")]),t._v(" "),s("td",[t._v("Y,使用到a,b,c")])]),t._v(" "),s("tr",[s("td",[t._v("where b =  3 或者 where b = 3 and c =  4 或者 where c =  4")]),t._v(" "),s("td",[t._v("N")])]),t._v(" "),s("tr",[s("td",[t._v("where a =  3 and c = 5")]),t._v(" "),s("td",[t._v("使用到a， 但是c不可以，b中间断了")])]),t._v(" "),s("tr",[s("td",[t._v("where a =  3 and b > 4 and c = 5")]),t._v(" "),s("td",[t._v("使用到a和b， c不能用在范围之后，b断了")])]),t._v(" "),s("tr",[s("td",[t._v("where a is  null and b is not null")]),t._v(" "),s("td",[t._v("is null 支持索引  但是is not null 不支持,所以 a 可以使用索引,但是 b不一定能用上索引（8.0）")])]),t._v(" "),s("tr",[s("td",[t._v("where a  <> 3")]),t._v(" "),s("td",[t._v("不能使用索引")])]),t._v(" "),s("tr",[s("td",[t._v("where  abs(a) =3")]),t._v(" "),s("td",[t._v("不能使用 索引")])]),t._v(" "),s("tr",[s("td",[t._v("where a =  3 and b like 'kk%' and c = 4")]),t._v(" "),s("td",[t._v("Y,使用到a,b,c")])]),t._v(" "),s("tr",[s("td",[t._v("where a =  3 and b like '%kk' and c = 4")]),t._v(" "),s("td",[t._v("Y,只用到a")])]),t._v(" "),s("tr",[s("td",[t._v("where a =  3 and b like '%kk%' and c = 4")]),t._v(" "),s("td",[t._v("Y,只用到a")])]),t._v(" "),s("tr",[s("td",[t._v("where a =  3 and b like 'k%kk%' and c =  4")]),t._v(" "),s("td",[t._v("Y,使用到a,b,c")])])])]),t._v(" "),s("h2",{attrs:{id:"一般性建议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一般性建议"}},[t._v("#")]),t._v(" 一般性建议")]),t._v(" "),s("p",[t._v("Ø 对于单键索引，尽量选择过滤性更好的索引（例如：手机号，邮件，身份证）")]),t._v(" "),s("p",[t._v("Ø 在选择组合索引的时候，过滤性最好的字段在索引字段顺序中，位置越靠前越好。")]),t._v(" "),s("p",[t._v("Ø 选择组合索引时，尽量包含where中更多字段的索引")]),t._v(" "),s("p",[t._v("Ø 组合索引出现范围查询时，尽量把这个字段放在索引次序的最后面")]),t._v(" "),s("p",[t._v("Ø 尽量避免造成索引失效的情况")]),t._v(" "),s("h2",{attrs:{id:"实验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实验"}},[t._v("#")]),t._v(" 实验")]),t._v(" "),s("p",[t._v("删除索引")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" drop index idx_age_name_deptid on emp;\n")])])]),s("p",[t._v("创建索引")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("CREATE INDEX idx_age_deptid_name ON emp (age,deptid,NAME);\n")])])]),s("h4",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("p",[s("strong",[t._v("无过滤不索引")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\nEXPLAIN SELECT * FROM emp ORDER BY age,deptid; \nEXPLAIN SELECT * FROM emp ORDER BY age,deptid LIMIT 10; \n\n增加过滤条件，使用上索引了。\nEXPLAIN SELECT age FROM emp where age>1000 ORDER BY age,deptid,name;\n\n")])])]),s("p",[s("strong",[t._v("查询条件与筛选条件")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const查询排序后回表操作，不会filesort\nEXPLAIN SELECT * FROM emp WHERE age=45 ORDER BY age,deptid,NAME; \n\nrange查询，Using index condition 没有完全使用索引\nEXPLAIN SELECT * FROM emp WHERE age>45 ORDER BY age,deptid,NAME;\nrange查询，Using where; Using index 完全使用索引\nEXPLAIN SELECT age FROM emp WHERE age>45 ORDER BY age,deptid,NAME;\n")])])]),s("p",[s("strong",[t._v("顺序错 filesort")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("正常情况\nEXPLAIN SELECT age FROM emp WHERE age>45 ORDER BY age,deptid,NAME;\norder by顺序变化会导致filesort\nEXPLAIN SELECT age FROM emp WHERE age>45 ORDER BY deptid,age,NAME;\n\n")])])]),s("p",[s("strong",[t._v("order by非最左 filesort")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("EXPLAIN SELECT age FROM emp WHERE age>45 ORDER BY deptid,NAME;\n")])])]),s("p",[s("strong",[t._v("方向反 必排序")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("8.0为Backward index scan 倒序索引\nEXPLAIN SELECT age FROM emp WHERE age>45 ORDER BY age desc,deptid desc,NAME desc\n\n方向反 产生filesort\nEXPLAIN SELECT age FROM emp WHERE age>45 ORDER BY age desc,deptid desc,NAME asc;\n\n")])])]),s("h1",{attrs:{id:"_2-jvm-内存模型中-为什么要区分新生代和年老代-对于新生代-为什么又要区分eden-区survial区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-jvm-内存模型中-为什么要区分新生代和年老代-对于新生代-为什么又要区分eden-区survial区"}},[t._v("#")]),t._v(" 2 JVM 内存模型中，为什么要区分新生代和年老代，对于新生代，为什么又要区分eden 区survial区?")]),t._v(" "),s("p",[s("img",{attrs:{src:a(437),alt:"image-20230312072639148"}})]),t._v(" "),s("h2",{attrs:{id:"关键点-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键点-2"}},[t._v("#")]),t._v(" 关键点：")]),t._v(" "),s("ol",[s("li",[t._v("分清jvm标准与实现")]),t._v(" "),s("li",[t._v("分代收集算法在g1上是逻辑上的划分之前的垃圾回收器可以理解是物理上的")]),t._v(" "),s("li",[t._v("标记算法")]),t._v(" "),s("li",[t._v("清除算法")]),t._v(" "),s("li",[s("strong",[t._v("内存连续空间")])]),t._v(" "),s("li",[t._v("记不住联想一下下片儿")]),t._v(" "),s("li",[t._v("更多参考尚硅谷jvm课程")])]),t._v(" "),s("h2",{attrs:{id:"答案-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#答案-2"}},[t._v("#")]),t._v(" "),s("strong",[t._v("答案：")])]),t._v(" "),s("ol",[s("li",[t._v("主流垃圾回收器 cms g1都使用了分代收集算法")]),t._v(" "),s("li",[t._v("正常系统运行时会有"),s("strong",[t._v("海量****临时对象")]),t._v("产生，这些对象短期内大部分就会失效，对于这些对象我们把他们临时放到新生代")]),t._v(" "),s("li",[t._v("新生代满了之后需要清理垃圾对象，我们会把有效对象复制到老年代，以便后续继续使用")]),t._v(" "),s("li",[t._v("为了更有效的区分哪些对象应该被复制到老年代，所以在新生代划分出了eden去和s0,s1区域")]),t._v(" "),s("li",[t._v("细化后的新生代内部被再次划分以便保证高速读写同时内存连续，\n"),s("ol",[s("li",[t._v("新对象会被保存到eden区（开始是空的所以内存连续），eden区满了会把有效对象复制到s0（s0也是空的所以也是连续空间）")]),t._v(" "),s("li",[t._v("清空eden区（再次写入时又是连续空间）")]),t._v(" "),s("li",[t._v("s0 和 s1 在命名上互换 原来的s1等待写入（空的）")]),t._v(" "),s("li",[t._v("eden区再次满了，重复上面步骤")])])]),t._v(" "),s("li",[t._v("eden区通过复制/清除算法保证了读写连续性（因为新生代的对象产生和销毁非常频繁，所以才采用了清空的方式）")])]),t._v(" "),s("h1",{attrs:{id:"_3-典型的jdbc程序按-顺序编写-排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-典型的jdbc程序按-顺序编写-排序"}},[t._v("#")]),t._v(" 3 典型的JDBC程序按()顺序编写( 排序)")]),t._v(" "),s("p",[t._v("答案：dbecfa")]),t._v(" "),s("p",[s("strong",[t._v("下列语句哪一个正确(b)，")]),t._v("\nA.Java 程序经编译后会产生 machine code\nB.Java 程序经编译后会产生 byte code\nC.Java 程序经编译后会产生 DLL\nD.以上都不正确")]),t._v(" "),s("h1",{attrs:{id:"_4-请编写一个java类testjava-求出100以内既能被2-除又能被3-除的数-并输出到控制台上"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-请编写一个java类testjava-求出100以内既能被2-除又能被3-除的数-并输出到控制台上"}},[t._v("#")]),t._v(" 4 请编写一个Java类Testjava，求出100以内既能被2 除又能被3 除的数，并输出到控制台上")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test01")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h1",{attrs:{id:"_5-a-系统远程调用-b-系统的接口-a-系统在完成调用之后-需要更新a-系统本地表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-a-系统远程调用-b-系统的接口-a-系统在完成调用之后-需要更新a-系统本地表"}},[t._v("#")]),t._v(" 5 A 系统远程调用 B 系统的接口，A 系统在完成调用之后，需要更新A 系统本地表")]),t._v(" "),s("h1",{attrs:{id:"问题1-常见的远程调用有几种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题1-常见的远程调用有几种"}},[t._v("#")]),t._v(" 问题1:常见的远程调用有几种?")]),t._v(" "),s("p",[s("strong",[t._v("关键点：")])]),t._v(" "),s("ol",[s("li",[t._v("网络协议与封装,所有的网络请求都是基于TCP或UDP协议的")]),t._v(" "),s("li",[t._v("常用框架")]),t._v(" "),s("li",[t._v("长短连接(复用)")])]),t._v(" "),s("p",[s("strong",[t._v("答案：")])]),t._v(" "),s("ol",[s("li",[t._v("自定义协议实现C/S RPC调用（实现复杂，需解决的问题多）")]),t._v(" "),s("li",[t._v("UDP广播类型（常见用于即时通讯类，速度快，但需要二次确认）")]),t._v(" "),s("li",[t._v("目前主流的基于http协议调用（Restful风格的api，springcloud微服务调用使用的就是http）")]),t._v(" "),s("li",[t._v("dubbo协议（阿里出品，长连接，二进制封装数据，性能较高）")]),t._v(" "),s("li",[t._v("soap协议（古老的webservice系列框架，基于xml实现数据封装，http协议传输）")]),t._v(" "),s("li",[t._v("异步响应式（WebFlux+Spring Data Reactive）")]),t._v(" "),s("li",[t._v("服务器推（不主动调用，常见系统通知类）")])]),t._v(" "),s("h1",{attrs:{id:"问题-2-对于有这些外部衔接的方法需要注意哪些问题-请写出注意问题及伪代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题-2-对于有这些外部衔接的方法需要注意哪些问题-请写出注意问题及伪代码"}},[t._v("#")]),t._v(" 问题 2: 对于有这些外部衔接的方法需要注意哪些问题?请写出注意问题及伪代码")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("写好接口文档，方便后续维护和团队协作")])]),t._v(" "),s("li",[s("p",[t._v("统一化的报文结构")])]),t._v(" "),s("li",[s("p",[t._v("标准化的服务状态码")]),t._v(" "),s("ol",[s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("status_code 200;//请求成功\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("统一化请求日志记录,及异常记录")])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('GlobalExceptionHandler...\n\nlogger.error("服务异常"，exception);\n')])])])]),t._v(" "),s("li",[s("p",[t._v("当请求延迟过高，可以快速失败")])]),t._v(" "),s("li",[s("p",[t._v("重试机制")])]),t._v(" "),s("li",[s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务列表")]),t._v("\nserverList "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("ser1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ser2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("ser3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nretrycount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nretrymax"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmaxrequesttime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("ms；\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getxxoo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尝试请求数据")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("calldata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serverList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("请求失败 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v("类异常 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" 请求超时 calldata的网络请求方法中"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   拦截器记录日志")]),t._v("\n    serverList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("刚才请求的服务器"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   重试次数过多")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("retrycount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" retrymax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前访问不可用稍后再试"')]),t._v("\n    \n    retrycount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    递归调用本方法\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("事务问题，可回滚")])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("getData(){\n分布式事务开启\n\nget1();\nget2();\nget3();\n事务结束\n要么全成功 要么全失败\n修改数据时使用 tryModify() 临时保存数据或通过Seata类似的框架实现\n}\n")])])])]),t._v(" "),s("li",[s("p",[t._v("数据一致性问题")])]),t._v(" "),s("li",[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("有并发修改数据时，如果需要保证一致性，需要使用分布式锁\n修改方法\nmodifyxx(){\n// 尝试加锁\nboolean haslock = tryLock(id)\n\nif(haslock){\nhttppost(url,data)\nreleaseLock(id)\n}\nelse{\n\n// 提示用户一会再试试\n// 尝试再次获取锁\n}\n\n}\n")])])])])]),t._v(" "),s("h1",{attrs:{id:"_6-在如下代码中-当调用inserta-方法的时候-是否能做当inserta-到当调用insertb的时候-如果imnsertb-插入b表的时候有异常-能否保证-inserta0中的a-表插入成功-如果不能-应该如何修改。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-在如下代码中-当调用inserta-方法的时候-是否能做当inserta-到当调用insertb的时候-如果imnsertb-插入b表的时候有异常-能否保证-inserta0中的a-表插入成功-如果不能-应该如何修改。"}},[t._v("#")]),t._v(" 6 在如下代码中，当调用insertA 方法的时候，是否能做当insertA 到当调用insertB的时候，如果imnsertB 插入b表的时候有异常，能否保证 insertA0中的a 表插入成功，如果不能，应该如何修改。")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("数据库事务")]),t._v(" "),s("li",[t._v("编程式事务 beginTransaction、commit、rollback")]),t._v(" "),s("li",[t._v("声明式事务 @Transactional")])]),t._v(" "),s("p",[t._v("答:")]),t._v(" "),s("ol",[s("li",[t._v("不能，在类上使用了@Transactional注解，默认开启了全局读写事务")]),t._v(" "),s("li",[t._v("可以细粒度在方法上加注解")])]),t._v(" "),s("h1",{attrs:{id:"_7-springboot是如何管理版本依赖的-什么是自动配置、起步依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-springboot是如何管理版本依赖的-什么是自动配置、起步依赖"}},[t._v("#")]),t._v(" 7 springboot是如何管理版本依赖的？什么是自动配置、起步依赖?")]),t._v(" "),s("h2",{attrs:{id:"springboot是如何管理版本依赖的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot是如何管理版本依赖的"}},[t._v("#")]),t._v(" springboot是如何管理版本依赖的？")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("p",[t._v("1.maven")]),t._v(" "),s("p",[t._v("2.springboot pom.xml 父子关系")]),t._v(" "),s("p",[t._v("3.spring-boot-starter")]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("springboot底层使用maven管理依赖，通过控制pom.xml父子关系来完成细节配置，在父pom中定义具体框架和版本号以及额外的信息。")]),t._v(" "),s("li",[t._v("提供了很多场景的spring-boot-starter 的 pom.xml文件，来标准化的引入依赖避免冲突")])]),t._v(" "),s("h2",{attrs:{id:"什么是自动配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是自动配置"}},[t._v("#")]),t._v(" 什么是自动配置？")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("看springboot的源码")]),t._v(" "),s("li",[t._v("@SpringBootApplication 中包含的@EnableAutoConfiguration，@SpringBootConfiguration，@ComponentScan 注解")]),t._v(" "),s("li",[t._v("@EnableAutoConfiguration 开启自动配置功能 内部还包含 @AutoConfigurationPackage、@Import\n"),s("ol",[s("li",[t._v("@AutoConfigurationPackage 中 @Import(AutoConfigurationPackages.Registrar.class) 引入了 Registrar.class 完成批量注册，默认扫描主启动类的包@Bean或者@Compont等注解")]),t._v(" "),s("li",[t._v("@Import(AutoConfigurationImportSelector.class)")])])]),t._v(" "),s("li",[t._v("@ComponentScan 扫描被@Compent(@Service@Controller)注解的bean 加载到容器中")]),t._v(" "),s("li",[t._v("@SpringBootConfiguration 表示这是一个SpringBoot的配置类")])]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("所加载使用的jar包 如果是比较常见的，spring都提供了默认配置，也就是不像以前一样需要把框架的每一个属性都要配置一遍，主要目的是简化开发")])]),t._v(" "),s("li",[t._v("springboot 通过在启动类上添加注解 @SpringBootApplication 完成自动配置")]),t._v(" "),s("li",[t._v("内部完成了读取每个jar包下的"),s("code",[t._v("META-INF/spring.factories")]),t._v("和spring-boot-autoconfigure-2.6.7.jar中的默认配置")])]),t._v(" "),s("h2",{attrs:{id:"起步依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#起步依赖"}},[t._v("#")]),t._v(" 起步依赖?")]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("p",[t._v("指的是各种starter重点是pom.xml,其中包含了框架所需要的其他依赖以及默认配置文件，不需要我们手动配置了。")]),t._v(" "),s("h1",{attrs:{id:"_8-数据库索引的原理-创建索引的缺点是什么-什么情况索引失效-优化数据库的方法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-数据库索引的原理-创建索引的缺点是什么-什么情况索引失效-优化数据库的方法有哪些"}},[t._v("#")]),t._v(" 8 数据库索引的原理?创建索引的缺点是什么，什么情况索引失效?优化数据库的方法有哪些?")]),t._v(" "),s("p",[s("strong",[t._v("关键点：")])]),t._v(" "),s("ol",[s("li",[t._v("哪种数据库（其实关系型的都差不多）")]),t._v(" "),s("li",[t._v("以mysql 为例 b+树")]),t._v(" "),s("li",[t._v("索引的好处和代价")]),t._v(" "),s("li",[t._v("索引失效的情况")]),t._v(" "),s("li",[t._v("优化：\n"),s("ol",[s("li",[t._v("硬件 层面")]),t._v(" "),s("li",[t._v("软件 层面")])])])]),t._v(" "),s("p",[s("strong",[t._v("答：")])]),t._v(" "),s("h2",{attrs:{id:"数据库索引的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库索引的原理"}},[t._v("#")]),t._v(" 数据库索引的原理?")]),t._v(" "),s("ol",[s("li",[t._v("以mysql为例，默认引擎InnoDB使用了b+树实现索引，在索引查找时 实现了log（n）的时间复杂度")]),t._v(" "),s("li",[t._v("聚簇索引记录了主键id（完整数据），非聚簇索引的索引树中记录数据（索引字段+主键）")]),t._v(" "),s("li",[t._v("在聚簇索引的叶子节点中记录了完整的值，非聚簇索引的叶子节点记录的是主键以及索引字段，如果需要完整值的话需要回表操作，即使用主键去聚簇索引中再次查找完整数据")]),t._v(" "),s("li",[t._v("索引的叶子节点以链表的形式存储，方便顺序查找和排序")])]),t._v(" "),s("h2",{attrs:{id:"创建索引的缺点是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建索引的缺点是什么"}},[t._v("#")]),t._v(" 创建索引的缺点是什么？")]),t._v(" "),s("ol",[s("li",[t._v("会占用空间")]),t._v(" "),s("li",[t._v("更新时会级联更新索引")]),t._v(" "),s("li",[t._v("高并发写影响性能")])]),t._v(" "),s("h2",{attrs:{id:"什么情况索引失效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么情况索引失效"}},[t._v("#")]),t._v(" 什么情况索引失效?")]),t._v(" "),s("ol",[s("li",[t._v("计算、函数导致索引失效")]),t._v(" "),s("li",[t._v("LIKE以%开头索引失效")]),t._v(" "),s("li",[t._v("不等于(!= 或者<>)索引失效")]),t._v(" "),s("li",[t._v("IS NOT NULL 可能失效（不同版本和数据决定） IS NULL有效")]),t._v(" "),s("li",[t._v("类型转换导致索引失效")]),t._v(" "),s("li",[t._v("数据库优化器觉得不用索引更快的时候失效")])]),t._v(" "),s("h2",{attrs:{id:"优化数据库的方法有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化数据库的方法有哪些"}},[t._v("#")]),t._v(" "),s("strong",[t._v("优化数据库的方法有哪些?")])]),t._v(" "),s("ol",[s("li",[t._v("硬件 主要在存储层优化")]),t._v(" "),s("li",[t._v("网络")]),t._v(" "),s("li",[t._v("操作系统调优")]),t._v(" "),s("li",[t._v("表结构设计优化")]),t._v(" "),s("li",[t._v("sql优化")]),t._v(" "),s("li",[t._v("减少函数使用")]),t._v(" "),s("li",[t._v("索引优化")]),t._v(" "),s("li",[t._v("大字段及全文检索优化")]),t._v(" "),s("li",[t._v("连接池优化")]),t._v(" "),s("li",[t._v("事务优化")]),t._v(" "),s("li",[t._v("数据库集群化")]),t._v(" "),s("li",[t._v("加入缓存")]),t._v(" "),s("li",[t._v("冷热存储")]),t._v(" "),s("li",[t._v("分库分表")])]),t._v(" "),s("h1",{attrs:{id:"_9-integer和int-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-integer和int-的区别"}},[t._v("#")]),t._v(" 9.Integer和int 的区别")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("堆栈存储基础数据类型与对象")]),t._v(" "),s("li",[t._v("值比对的时候注意java的自动拆箱")]),t._v(" "),s("li",[t._v("Integer 值大小在 -128到127之内 使用IntegerCache")])]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("Integer是int的包装类，int则是java的一种基本的数据类型；")]),t._v(" "),s("li",[t._v("Integer实际是对象的引用，当new一个Integer时，实际上生成一个指针指向对象，而int则直接存储数值")]),t._v(" "),s("li",[t._v("Integer的默认值是null，而int的默认值是0。")])]),t._v(" "),s("h1",{attrs:{id:"_10-jsp的八个隐含对象有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-jsp的八个隐含对象有哪些"}},[t._v("#")]),t._v(" 10 jsp的八个隐含对象有哪些")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("jsp本质上就是servlet")]),t._v(" "),s("li",[t._v("答不上来关系也不大")])]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("p",[s("strong",[t._v("1 pageContext")])]),t._v(" "),s("p",[t._v("类型：PageContext")]),t._v(" "),s("p",[t._v("代表：当前页面的上下文")]),t._v(" "),s("p",[t._v("作用：可以获取到页面中的其他隐含对象，同时它还是一个域对象。")]),t._v(" "),s("p",[s("strong",[t._v("2 request")])]),t._v(" "),s("p",[t._v("类型：HttpServletRequest")]),t._v(" "),s("p",[t._v("代表：请求")]),t._v(" "),s("p",[t._v("作用：可以获取用户发送的请求信息，它也是一个域对象。")]),t._v(" "),s("p",[s("strong",[t._v("3 session")])]),t._v(" "),s("p",[t._v("类型：HttpSession")]),t._v(" "),s("p",[t._v("代表：当前会话")]),t._v(" "),s("p",[t._v("作用：可以作为域对象，用来共享数据。")]),t._v(" "),s("p",[s("strong",[t._v("4 application")])]),t._v(" "),s("p",[t._v("类型：ServletContext")]),t._v(" "),s("p",[t._v("代表：代表整个WEB应用")]),t._v(" "),s("p",[t._v("作用：是JavaWeb中最大的域对象。")]),t._v(" "),s("p",[s("strong",[t._v("5 response")])]),t._v(" "),s("p",[t._v("类型：HttpServletResponse")]),t._v(" "),s("p",[t._v("代表：响应")]),t._v(" "),s("p",[t._v("作用：向浏览器发送响应信息")]),t._v(" "),s("p",[s("strong",[t._v("6 out")])]),t._v(" "),s("p",[t._v("类型：JspWriter")]),t._v(" "),s("p",[t._v("代表：输出流")]),t._v(" "),s("p",[t._v("作用：可以向页面输出内容")]),t._v(" "),s("p",[s("strong",[t._v("7 config")])]),t._v(" "),s("p",[t._v("类型：ServletConfig")]),t._v(" "),s("p",[t._v("代表：当前JSP的配置信息")]),t._v(" "),s("p",[t._v("作用：可以获取到Servlet标签中初始化参数")]),t._v(" "),s("p",[s("strong",[t._v("8 page")])]),t._v(" "),s("p",[t._v("类型：Object 在service方法中有如下代码 Object page = this;")]),t._v(" "),s("p",[t._v("代表：代表当前JSP的对象")]),t._v(" "),s("p",[s("strong",[t._v("9 exception")])]),t._v(" "),s("p",[t._v("类型：Throwable")]),t._v(" "),s("p",[t._v("代表：异常信息")]),t._v(" "),s("p",[t._v("作用：获取页面中的异常")]),t._v(" "),s("h1",{attrs:{id:"_11-数据库三范式是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-数据库三范式是什么"}},[t._v("#")]),t._v(" 11 数据库三范式是什么")]),t._v(" "),s("h3",{attrs:{id:"第一范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一范式"}},[t._v("#")]),t._v(" 第一范式")]),t._v(" "),s("p",[t._v("·    单表（字段）拆分到不可拆分为止")]),t._v(" "),s("p",[t._v("o  张，三，街道地址方便分组 联系方式（手机号，email）")]),t._v(" "),s("p",[t._v("o  有主键，具有原子性，字段不可分割")]),t._v(" "),s("p",[t._v("​        "),s("img",{attrs:{src:"img/image-20221111203511158.png",alt:"image-20221111203511158"}})]),t._v(" "),s("p",[t._v("改动后")]),t._v(" "),s("p",[s("img",{attrs:{src:"img/image-20221111203515604-16681701168362.png",alt:"image-20221111203515604"}})]),t._v(" "),s("h3",{attrs:{id:"第二范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二范式"}},[t._v("#")]),t._v(" 第二范式")]),t._v(" "),s("p",[t._v("·    每一行数据唯一性")]),t._v(" "),s("p",[t._v("o   - 订单地址重复，引用其他表")]),t._v(" "),s("p",[t._v("o   - 多表关联")]),t._v(" "),s("p",[s("img",{attrs:{src:"img/image-20221111203525027.png",alt:"image-20221111203525027"}})]),t._v(" "),s("h3",{attrs:{id:"第三范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三范式"}},[t._v("#")]),t._v(" 第三范式")]),t._v(" "),s("p",[t._v("表之间关联主键依赖")]),t._v(" "),s("p",[t._v("·    单行数据中保留唯一主键，建立外键关联表")]),t._v(" "),s("p",[s("img",{attrs:{src:"img/image-20221111203531147.png",alt:"image-20221111203531147"}})]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("数据库三范式是设计数据库表的方法论，能够充分的利用关系型数据库把实体有机的关联起来")]),t._v(" "),s("li",[t._v("降低耦合度节省存储空间")])]),t._v(" "),s("h1",{attrs:{id:"_12-什么是-spring-的依赖注入-有哪些方法进行依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-什么是-spring-的依赖注入-有哪些方法进行依赖注入"}},[t._v("#")]),t._v(" 12 什么是 Spring 的依赖注入?有哪些方法进行依赖注入")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("Ioc Inversion of Control 控制翻转")]),t._v(" "),s("li",[t._v("DI Dependency Injection 依赖注入")])]),t._v(" "),s("p",[t._v("答：依赖注入是指将依赖的对象实例交给spring帮我们注入 管理，从而释放对对象的管理权，比如可以统一替换接口的实现，更高效的开发程序")]),t._v(" "),s("ol",[s("li",[t._v("set方法注入")]),t._v(" "),s("li",[t._v("构造方法注入")]),t._v(" "),s("li",[t._v("@autowire 自动注入")])]),t._v(" "),s("h1",{attrs:{id:"_13-说一下你理解的jvm-原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-说一下你理解的jvm-原理"}},[t._v("#")]),t._v(" 13  说一下你理解的JVM 原理")]),t._v(" "),s("p",[s("img",{attrs:{src:a(438),alt:"image-20230313032731060"}})]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("jvm标准与实现")]),t._v(" "),s("li",[t._v("解决了跨平台问题")]),t._v(" "),s("li",[t._v("JMM内存管理")]),t._v(" "),s("li",[t._v("JVM模型")]),t._v(" "),s("li",[t._v("不同的垃圾回收器")])]),t._v(" "),s("p",[t._v("答： jvm是java虚拟机，我们的class文件运行在虚拟机上，通过虚拟机解决了跨平台的问题，jvm中有jmm来管理java内存访问的方式，不同的jvm实现性能关注有差异，现在主流的实现是Hotspot，垃圾回收器是G1，jvm运行时内存中分为方法区，堆，栈，本地方法栈，执行代码时需要执行引擎")]),t._v(" "),s("h1",{attrs:{id:"_14-浅谈-reentrantlock-的设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-浅谈-reentrantlock-的设计"}},[t._v("#")]),t._v(" 14 浅谈 ReentrantLock 的设计")]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("ReentrantLock 是在"),s("strong",[t._v("多线程竞争资源")]),t._v("时使用的锁，他是一个独占锁、可重入锁，也是悲观锁")]),t._v(" "),s("li",[t._v("ReentrantLock 支持公平锁，对公平和非公平锁有不同的实现逻辑")]),t._v(" "),s("li",[t._v("ReentrantLock  使用 aqs（AbstractQueuedSynchronizer）来实现的获取锁的线程队列等待的过程")]),t._v(" "),s("li",[t._v("内部使用了原子操作类 cas 比较线程与对应的锁关系")]),t._v(" "),s("li",[t._v("内部支持newCondition来灵活的控制获取到锁的线程的阻塞与释放")])]),t._v(" "),s("h1",{attrs:{id:"_15-说一下-mysql-中事务的实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-说一下-mysql-中事务的实现原理"}},[t._v("#")]),t._v(" 15 说一下 mysql 中事务的实现原理")]),t._v(" "),s("p",[t._v("https://dev.mysql.com/doc/refman/5.7/en/innodb-multi-versioning.html")]),t._v(" "),s("p",[t._v("Multi-Version Concurrency Control 多版本并发控制，"),s("em",[t._v("MVCC")]),t._v(" 是一种并发控制的方法，一般在数据库管理系统中，实现对数据库的并发访问")]),t._v(" "),s("p",[t._v("InnoDB是一个多版本的存储引擎。它保存有关已更改行的旧版本的信息，以支持并发和回滚等事务特性。这些信息存储在一个称为回滚段的数据结构中的系统表空间或undo表空间中。参见第14.6.3.4节“撤消表空间”。InnoDB使用回滚段中的信息来执行事务回滚所需的撤消操作。它还使用这些信息构建行的早期版本，以实现一致的读取")]),t._v(" "),s("p",[t._v("MVCC 的实现依赖于：隐藏字段、Read View、undo log")]),t._v(" "),s("p",[s("strong",[t._v("隐藏字段")])]),t._v(" "),s("ul",[s("li",[t._v("A 6-byte "),s("code",[t._v("DB_TRX_ID")]),t._v(" 用来标识最近一次对本行记录做修改 (insert 、update) 的事务的标识符 ，即最后一次修改本行记录的事务 id。 如果是 delete 操作， 在 InnoDB 存储引擎内部也属于一次 update 操作，即更新行中的一个特殊位 ，将行标识为己删除，并非真正删除。")]),t._v(" "),s("li",[t._v("A 7-byte "),s("code",[t._v("DB_ROLL_PTR")]),t._v(" 回滚指针，指向该行的 undo log 。如果该行未被更新，则为空.")]),t._v(" "),s("li",[t._v("A 6-byte "),s("code",[t._v("DB_ROW_ID")]),t._v(" 如果没有设置主键且该表没有唯一非空索引时，"),s("code",[t._v("InnoDB")]),t._v(" 会使用该 id 来生成聚簇索引.")])]),t._v(" "),s("p",[s("strong",[t._v("Read View")])]),t._v(" "),s("p",[t._v("不同的事务隔离级别中，当有事物在执行过程中修改了数据（更新版本号），在并发事务时需要判断一下版本链中的哪个版本是当前事务可见的。为此InnoDB有了ReadView的概念，使用ReadView来记录和隔离不同事务并发时此记录的哪些版本是对当前访问事物可见的。")]),t._v(" "),s("p",[s("strong",[t._v("undo log")])]),t._v(" "),s("p",[t._v("除了用来回滚数据，还可以读取可见版本的数据。以此实现非锁定读")]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("mysql是由mvcc实现的事务控制")]),t._v(" "),s("li",[t._v("MVCC 的实现依赖于：隐藏字段、Read View、undo log")]),t._v(" "),s("li",[t._v("在不同的事务隔离级别下通过设置readview内容，控制了哪些数据可见于不可见")])]),t._v(" "),s("h1",{attrs:{id:"_16-编写一个基于线程安全的懒加载单例模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-编写一个基于线程安全的懒加载单例模式"}},[t._v("#")]),t._v(" 16 编写一个基于线程安全的懒加载单例模式")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("多线程访问")]),t._v(" "),s("li",[t._v("防止直接new对象")]),t._v(" "),s("li",[t._v("使用锁")]),t._v(" "),s("li",[t._v("内部类加载实现、cas实现等")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test03")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test03")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test03")]),t._v(" instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test03")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有可能在多线程访问的时候，重复new 了对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可能会有多个线程 进入抢锁等待状态")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test03")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    instance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test03")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h1",{attrs:{id:"_17-值传递和引用传递问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_17-值传递和引用传递问题"}},[t._v("#")]),t._v(" 17 值传递和引用传递问题")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("引用传递")]),t._v(" "),s("li",[t._v("堆栈内存分析")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\tpublic static void main(String args[]) {\n\t\t\t\tStringBuffer a = new StringBuffer("A");\n\t\t\t\tStringBuffer b = new StringBuffer("B");\n\t\t\t\toperater(a,b);\n\t\t\t\t\n\t\t\t\tSystem.out.println(a+" "+b);\n\t\t\t\n\t\t\t}\n\n\tpublic static void operater(StringBuffer x, StringBuffer y) {\n\n\t\tx.append(y);\n\t\ty = x;\n\t}\n')])])]),s("p",[t._v("答： ab b")]),t._v(" "),s("h1",{attrs:{id:"_18-异常代码分析1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_18-异常代码分析1"}},[t._v("#")]),t._v(" 18 异常代码分析1")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("异常会阻断正常代码运行")]),t._v(" "),s("li",[t._v("finally 一定会执行")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\tpublic static void main(String[] args) {\n\n\t\ttry {\n\t\t\tint i = 100 / 0;\n\t\t\tSystem.out.print(i);\n\t\t} catch (Exception e) {\n\n\t\t\tSystem.out.println(1);\n\t\t\tthrow new RuntimeException();\n\t\t} finally {\n\t\t\tSystem.out.println(2);\n\t\t}\n\t\tSystem.out.println(3);\n\t}\n")])])]),s("p",[t._v("答： 1 2 异常")]),t._v(" "),s("h1",{attrs:{id:"_19-异常代码分析2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_19-异常代码分析2"}},[t._v("#")]),t._v(" 19 异常代码分析2")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("在finally中return 后不再执行后续代码")]),t._v(" "),s("li",[t._v("catch中return 不影响finally的执行")]),t._v(" "),s("li",[t._v("try catch 后的finally一定会执行")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\tpublic static String output = " ";\n\n\tpublic static void foo(int i) {\n\t\ttry {\n\t\t\tif (i == 1) {\n\t\t\t\tthrow new Exception();\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\toutput += "2";\n\t\t\treturn;\n\t\t} finally {\n\t\t\toutput += "3";\n\t\t\treturn;\n\t\t}\n\n\t\toutput += "4";\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tfoo(0);\n\t\tfoo(1);\n\t\tSystem.out.println(output);\n\t}\n')])])]),s("h1",{attrs:{id:"_20-spring的aop的使用情景有哪些-简述其实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_20-spring的aop的使用情景有哪些-简述其实现原理"}},[t._v("#")]),t._v(" 20 Spring的AOP的使用情景有哪些?简述其实现原理")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("aop面向切面编程使用非常广泛，几乎适用于一切需要统一化处理的场景")])]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("统一日志处理")]),t._v(" "),s("li",[t._v("统一异常处理")]),t._v(" "),s("li",[t._v("访问限制（权限，限流等）")]),t._v(" "),s("li",[t._v("事务处理")]),t._v(" "),s("li",[t._v("缓存管理等")]),t._v(" "),s("li",[t._v("aop是面向切面编程，通过代理的方式（jdk或cglib）为程序统一添加功能，解决公共问题")])]),t._v(" "),s("h1",{attrs:{id:"_21-列举linux的常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_21-列举linux的常用命令"}},[t._v("#")]),t._v(" 21 列举linux的常用命令")]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("find 、rm、rmdir、mv、cp、cat、pwd、chmod、kill、ping、ifconfig")])]),t._v(" "),s("li",[s("p",[t._v("tail、ps、grep、netstat、echo、ssh、scp、top、mpstat、free、df")])])]),t._v(" "),s("h1",{attrs:{id:"_22-列举知道并用过的其他前沿技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_22-列举知道并用过的其他前沿技术"}},[t._v("#")]),t._v(" 22 列举知道并用过的其他前沿技术")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("加分项，经常出现在笔试题中，目的是快速了解你的知识宽度并且希望团队中能吸收外界的知识")]),t._v(" "),s("li",[t._v("前沿的技术多数是业务创新，技术还是这几十年的积累")]),t._v(" "),s("li",[t._v("平时多看书 多学习")])]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("go语言")]),t._v(" "),s("li",[t._v("物联网 IoT 嵌入式开发 树莓派小车 摄像头")]),t._v(" "),s("li",[t._v("低代码数据中台")]),t._v(" "),s("li",[t._v("jdk新特性，g1,zgc")]),t._v(" "),s("li",[t._v("区块链")]),t._v(" "),s("li",[t._v("容器化云原生与监控Prometheus + Grafana")]),t._v(" "),s("li",[t._v("java高性能游戏开发")]),t._v(" "),s("li",[t._v("DDD")]),t._v(" "),s("li",[t._v("响应式编程与异步网络编程")]),t._v(" "),s("li",[t._v("推荐系统")]),t._v(" "),s("li",[t._v("高并发系统架构 nginx+lua")]),t._v(" "),s("li",[t._v("chatgpt")]),t._v(" "),s("li",[t._v("量子计算 三进制实现 火箭回收技术 常温超导。。。")])]),t._v(" "),s("h1",{attrs:{id:"_23-jvm-运行时数据区域包含哪几部分"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_23-jvm-运行时数据区域包含哪几部分"}},[t._v("#")]),t._v(" 23 JVM 运行时数据区域包含哪几部分?")]),t._v(" "),s("p",[s("img",{attrs:{src:"image-20230314003243971.png",alt:"image-20230314003243971"}})]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("堆")])]),t._v(" "),s("li",[s("p",[t._v("栈")])]),t._v(" "),s("li",[s("p",[t._v("本地方法栈")])]),t._v(" "),s("li",[s("p",[t._v("方法区")])])]),t._v(" "),s("h1",{attrs:{id:"_24-多线程中-start-方法和-run-方法的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_24-多线程中-start-方法和-run-方法的区别是什么"}},[t._v("#")]),t._v(" 24 多线程中 start（)方法和 run（）方法的区别是什么?")]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("start用来启动线程，改变的是线程的状态，由就绪进入执行")]),t._v(" "),s("li",[t._v("run方法中包含要执行的代码，在执行状态时运行里面的代码，方法返回值是void")])]),t._v(" "),s("h1",{attrs:{id:"_25-简单写一个会导致死锁的程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_25-简单写一个会导致死锁的程序"}},[t._v("#")]),t._v(" 25 简单写一个会导致死锁的程序")]),t._v(" "),s("ol",[s("li",[t._v("获得锁后不释放，其他线程一直拿不到锁")]),t._v(" "),s("li",[t._v("解决：不要嵌套获得多个锁")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\n    static Object lockA = new Object();\n    static Object lockB = new Object();\n    public static void main(String[] args) {\n\n\n\n\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n\n\n                System.out.println(Thread.currentThread() + " 尝试获取锁A");\n                synchronized (lockA){\n\n                    System.out.println(Thread.currentThread() + " 获取到了锁A");\n\n                    try {\n                        Thread.sleep(100);\n                    } catch (InterruptedException e) {\n                        throw new RuntimeException(e);\n                    }\n                    System.out.println(Thread.currentThread() + " 尝试获取锁B");\n                    synchronized (lockB){\n                        System.out.println(Thread.currentThread() + " 获取到了锁B");\n                    }\n                }\n            }\n        }).start();\n\n\n\n\n        new Thread(new Runnable() {\n            @Override\n            public void run() {\n\n\n                System.out.println(Thread.currentThread() + " 尝试获取锁B");\n                synchronized (lockB){\n\n                    System.out.println(Thread.currentThread() + " 获取到了锁B");\n\n                    try {\n                        Thread.sleep(100);\n                    } catch (InterruptedException e) {\n                        throw new RuntimeException(e);\n                    }\n\n                    System.out.println(Thread.currentThread() + " 尝试获取锁A");\n                    synchronized (lockA){\n                        System.out.println(Thread.currentThread() + " 获取到了锁A");\n                    }\n                }\n            }\n        }).start();\n    }\n')])])]),s("h1",{attrs:{id:"_26-对于高并发、高可用问题的常用处理方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_26-对于高并发、高可用问题的常用处理方式"}},[t._v("#")]),t._v(" 26 对于高并发、高可用问题的常用处理方式")]),t._v(" "),s("h2",{attrs:{id:"对于高并发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对于高并发"}},[t._v("#")]),t._v(" 对于高并发")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("寻找瓶颈")]),t._v(" "),s("li",[t._v("分治思想，业务拆分，流程拆分")]),t._v(" "),s("li",[t._v("扩容")]),t._v(" "),s("li",[t._v("限流")]),t._v(" "),s("li",[t._v("分流 ，cdn 缓存")]),t._v(" "),s("li",[t._v("流量清洗 waf")]),t._v(" "),s("li",[t._v("多级缓存设计 后端缓存，客户端缓存")]),t._v(" "),s("li",[t._v("日志溯源")]),t._v(" "),s("li",[t._v("资源隔离")]),t._v(" "),s("li",[t._v("弹性扩缩容")]),t._v(" "),s("li",[t._v("降级处理 前后端 兜底数据")])]),t._v(" "),s("h2",{attrs:{id:"对于高可用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对于高可用"}},[t._v("#")]),t._v(" 对于高可用")]),t._v(" "),s("ol",[s("li",[t._v("容器化管理 HA")]),t._v(" "),s("li",[t._v("keepalived")])]),t._v(" "),s("h1",{attrs:{id:"_27-jvm-是什么-请简述一下jvm-加载-class-文件的原理机制。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_27-jvm-是什么-请简述一下jvm-加载-class-文件的原理机制。"}},[t._v("#")]),t._v(" 27 JVM 是什么?请简述一下JVM 加载 class 文件的原理机制。")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("类加载器")]),t._v(" "),s("li",[t._v("魔数")]),t._v(" "),s("li",[t._v("元空间")])]),t._v(" "),s("p",[t._v("负责加载class文件，class文件在文件开头有特定的文件标示，并且ClassLoader只负责class文件的加载，至于它是否可以运行，则由Execution Engine决定。")]),t._v(" "),s("p",[s("strong",[t._v("魔数")])]),t._v(" "),s("ul",[s("li",[t._v("Class文件开头的四个字节的无符号整数称为魔数(Magic Number)。")]),t._v(" "),s("li",[t._v("魔数是Class文件的标识。值是固定的，为"),s("strong",[t._v("0xCAFEBABE")])]),t._v(" "),s("li",[t._v("如果一个Class文件的头四个字节不是0xCAFEBABE，虚拟机在进行文件校验的时候会报错。使用魔数而不是扩展名来识别Class文件，主要是基于安全方面的考虑，因为文件扩展名可以随意更改。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"1562486960334.png",alt:"1562486960334"}})]),t._v(" "),s("p",[t._v("类加载器分为四种：前三种为虚拟机自带的加载器。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("启动类加载器（Bootstrap）C++")]),t._v(" "),s("p",[t._v("负责加载$JAVA_HOME中jre/lib/"),s("strong",[t._v("rt.jar")]),t._v("里所有的class，由C++实现，不是ClassLoader子类")]),t._v(" "),s("p",[t._v("也叫系统类加载器，负责加载"),s("strong",[t._v("classpath")]),t._v("中指定的jar包及目录中class")])]),t._v(" "),s("li",[s("p",[t._v("扩展类加载器（Extension）Java")]),t._v(" "),s("p",[t._v("负责加载java平台中"),s("strong",[t._v("扩展功能")]),t._v("的一些jar包，包括$JAVA_HOME中jre/lib/*.jar或-Djava.ext.dirs指定目录下的jar包")])]),t._v(" "),s("li",[s("p",[t._v("应用程序类加载器（AppClassLoader）Java")])]),t._v(" "),s("li",[s("p",[t._v("用户自定义加载器  Java.lang.ClassLoader的子类，用户可以定制类的加载方式")])])]),t._v(" "),s("p",[t._v("工作过程：")]),t._v(" "),s("ul",[s("li",[t._v("1、当AppClassLoader加载一个class时，它首先不会自己去尝试加载这个类，而是把类加载请求委派给父类加载器ExtClassLoader去完成。")]),t._v(" "),s("li",[t._v("2、当ExtClassLoader加载一个class时，它首先也不会自己去尝试加载这个类，而是把类加载请求委派给BootStrapClassLoader去完成。")]),t._v(" "),s("li",[t._v("3、如果BootStrapClassLoader加载失败（例如在$JAVA_HOME/jre/lib里未查找到该class），会使用ExtClassLoader来尝试加载；")]),t._v(" "),s("li",[t._v("4、若ExtClassLoader也加载失败，则会使用AppClassLoader来加载")]),t._v(" "),s("li",[t._v("5、如果AppClassLoader也加载失败，则会报出异常ClassNotFoundException")])]),t._v(" "),s("p",[t._v("其实这就是所谓的"),s("strong",[t._v("双亲委派模型")]),t._v("。简单来说：如果一个类加载器收到了类加载的请求，它首先不会自己去尝试加载这个类，而是把"),s("strong",[t._v("请求委托给父加载器去完成，依次向上")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"image-20211002101029880.png",alt:"image-20211002101029880"}})]),t._v(" "),s("p",[t._v("好处："),s("strong",[t._v("防止内存中出现多份同样的字节码")]),t._v("(安全性角度)\n比如加载位于 rt.jar 包中的类 java.lang.Object，不管是哪个加载器加载这个类，最终都是委托给顶层的启动类加载器进行加载，这样就保证了使用不同的类加载器最终得到的都是同样一个 Object对象。")]),t._v(" "),s("h1",{attrs:{id:"_28-数据连接池的工作机制是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_28-数据连接池的工作机制是什么"}},[t._v("#")]),t._v(" 28 数据连接池的工作机制是什么?")]),t._v(" "),s("ol",[s("li",[t._v("连接池与线程池实现原理一样")]),t._v(" "),s("li",[t._v("限流与复用")]),t._v(" "),s("li",[t._v("数据库建立一个连接的开销要比客户端大")]),t._v(" "),s("li",[t._v("数据库连接池负责分配、管理和释放数据库连接，它允许应用程序重复使用一个现有的数据库连接，而再不是重新建立一个")])]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("预先创建好一些数据库连接，放到连接池中")]),t._v(" "),s("li",[t._v("连接池中设置最小连接数和最大连接数")]),t._v(" "),s("li",[t._v("最小连接不断开和数据库的连接")]),t._v(" "),s("li",[t._v("超过最小链接的那些线程，在长时间不使用时会被回收，也就是断开和数据库的连接")]),t._v(" "),s("li",[t._v("所有向数据库发送请求的业务必须通过连接池获得数据库连接")]),t._v(" "),s("li",[t._v("当连接全部在使用中，可以使用队列等待")])]),t._v(" "),s("h1",{attrs:{id:"_29-写一个正则表达式-验证用户输入的数据是不是身份证号码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_29-写一个正则表达式-验证用户输入的数据是不是身份证号码"}},[t._v("#")]),t._v(" 29 写一个正则表达式，验证用户输入的数据是不是身份证号码")]),t._v(" "),s("h1",{attrs:{id:"_30-代码题-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-代码题-继承"}},[t._v("#")]),t._v(" 30 代码题 继承")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" test "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Father")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"father"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("答案：father")]),t._v(" "),s("h1",{attrs:{id:"_31-代码题-父子异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_31-代码题-父子异常"}},[t._v("#")]),t._v(" 31 代码题 父子异常")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('public class Test {\n\tpublic int div(int a, int b) {\n\t\ttry {\n\n\t\t\treturn a / b;\n\t\t} catch (Exception e) {\n\t\t\tSystem.out.println("Exception");\n\t\t} catch (NullPointerException e) {\n\t\t\tSystem.out.println("ArithmeticException");\n\t\t}\n\n\t\tcatch (ArithmeticException e) {\n\t\t\tSystem.out.println("ArithmeticException");\n\n\t\t} finally {\n\t\t\tSystem.out.println("finally");\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tTest demo = new Test();\n\t\tSystem.out.println("商是:" + demo.div(9, 0));\n\t}\n\n}\n')])])]),s("p",[t._v("答： 编译失败")]),t._v(" "),s("h1",{attrs:{id:"_32-哪一个list实现了最快插入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32-哪一个list实现了最快插入"}},[t._v("#")]),t._v(" 32 哪一个List实现了最快插入?")]),t._v(" "),s("p",[t._v("arraylist ：数组实现的，查询，修改比较快")]),t._v(" "),s("p",[t._v("linkedlist：链表实现，插入，删除比较快，直接在最后插入数据即可")]),t._v(" "),s("p",[t._v("vector：jdk1.0就有 线程安全，效率特别低")]),t._v(" "),s("p",[t._v("答：linkedlist")]),t._v(" "),s("h2",{attrs:{id:"_33-存在使i-1-i的数吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_33-存在使i-1-i的数吗"}},[t._v("#")]),t._v(" 33 存在使i+1<i的数吗")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("基础数据类型的最大值 + 1 会变负数")])]),t._v(" "),s("h2",{attrs:{id:"下面哪个流类属于面向字符的输入流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下面哪个流类属于面向字符的输入流"}},[t._v("#")]),t._v(" 下面哪个流类属于面向字符的输入流")]),t._v(" "),s("p",[t._v("InputStreamReader")]),t._v(" "),s("h2",{attrs:{id:"不通过构造函数也能创建对象吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不通过构造函数也能创建对象吗"}},[t._v("#")]),t._v(" 不通过构造函数也能创建对象吗")]),t._v(" "),s("p",[t._v("是")]),t._v(" "),s("h1",{attrs:{id:"_34-java-接口的修饰符可以为"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_34-java-接口的修饰符可以为"}},[t._v("#")]),t._v(" 34 Java 接口的修饰符可以为")]),t._v(" "),s("p",[t._v("接口默认是abstract的，默认可以不写")]),t._v(" "),s("p",[t._v("接口的方法 1.8 以后可以有static和default的默认实现，static不能重写")]),t._v(" "),s("h2",{attrs:{id:"_35-arraylist-list-new-arraylist-20-中的-list-扩充几次"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_35-arraylist-list-new-arraylist-20-中的-list-扩充几次"}},[t._v("#")]),t._v(" 35 ArrayList list = new ArrayList(20)中的 list 扩充几次")]),t._v(" "),s("p",[t._v("因为有传参，没必要扩容，所以次数是0；")]),t._v(" "),s("h2",{attrs:{id:"下面哪些是对称加密算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下面哪些是对称加密算法"}},[t._v("#")]),t._v(" 下面哪些是对称加密算法")]),t._v(" "),s("p",[t._v("ab")]),t._v(" "),s("h2",{attrs:{id:"新建一个流对象-下面哪个选项的代码是错误的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#新建一个流对象-下面哪个选项的代码是错误的"}},[t._v("#")]),t._v(" 新建一个流对象，下面哪个选项的代码是错误的?")]),t._v(" "),s("h2",{attrs:{id:"代码题-这什么玩意-挠头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码题-这什么玩意-挠头"}},[t._v("#")]),t._v(" 代码题 这什么玩意（挠头）？？？")]),t._v(" "),s("p",[t._v("关键点：")]),t._v(" "),s("ol",[s("li",[t._v("null 是可以被强转成任何类型的")]),t._v(" "),s("li",[t._v("静态方法不需要实例对象")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('public class NULL {\n\tpublic static void haha() {\n\t\tSystem.out.println("haha");\n\t}\n\tpublic static void main(String[] args) {\n\t\t((NULL)null).haha();\n\t}\n}\n')])])]),s("h1",{attrs:{id:"_36-多线程变量同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_36-多线程变量同步"}},[t._v("#")]),t._v(" 36 多线程变量同步")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('\npublic class ThreadSafeCache {\n\n\tprivate int result;\n\n\tpublic int getResult() {\n\t\treturn result;\n\t}\n\n\tpublic synchronized void setResult(int result) {\n\t\tthis.result = result;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tThreadSafeCache threadSafeCache = new ThreadSafeCache();\n\n\t\tfor (int i = 0; i < 8; i++) {\n\n\t\t\tnew Thread(() -> {\n\t\t\t\twhile (threadSafeCache.getResult() < 100) {\n\n\t\t\t\t}\n\t\t\t\tSystem.out.println("我执行了");\n\t\t\t}).start();\n\t\t}\n\t\t\ttry {\n\t\t\t\tThread.sleep(1000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\t// TODO Auto-generated catch block\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tthreadSafeCache.setResult(200);\n\t}\n}\n\n')])])]),s("p",[t._v("答：")]),t._v(" "),s("ol",[s("li",[t._v("共享变量在多线程读取的时候，会被拉倒线程本地，white 在执行时，一直使用的都是本地变量的值，所以后续更改，线程内一直访问不到最新变量，程序会卡死")]),t._v(" "),s("li",[t._v("给变量增加  volatile关键字，保证多线程之间 变量可见性")])]),t._v(" "),s("h1",{attrs:{id:"_37-定义了一个类t-其中定义了一个synchronized-方法do-a-newt-b-new-t-。当一个线程进入a对象的-do-方法后-另一个线程是否可进入b对象的do-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_37-定义了一个类t-其中定义了一个synchronized-方法do-a-newt-b-new-t-。当一个线程进入a对象的-do-方法后-另一个线程是否可进入b对象的do-方法"}},[t._v("#")]),t._v(" 37 定义了一个类T,其中定义了一个synchronized 方法do（）; A=newT（）;B = new T（）。当一个线程进入A对象的 do 方法后，另一个线程是否可进入B对象的do 方法?")]),t._v(" "),s("p",[t._v("答：")]),t._v(" "),s("p",[t._v("互不影响")]),t._v(" "),s("ol",[s("li",[t._v("synchronize 普通方法，锁的是当前对象")]),t._v(" "),s("li",[t._v("synchronize 静态方法，锁的是class")]),t._v(" "),s("li",[t._v("同步代码块，可以手动指定锁对象是啥")])]),t._v(" "),s("h1",{attrs:{id:"_38-多线程有几种实现方法-都是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_38-多线程有几种实现方法-都是什么"}},[t._v("#")]),t._v(" 38 多线程有几种实现方法,都是什么?")]),t._v(" "),s("ol",[s("li",[t._v("实现Runnable接口 void返回值")]),t._v(" "),s("li",[t._v("实现Callable接口  可以指定返回值")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('/**\n * 1. 创建Callable的实现类，并重写call()方法，该方法为线程执行体，并且该方法有返回值\n */\nclass MyCallableThread implements Callable<Integer>{\n\n    @Override\n    public Integer call() throws Exception {\n        System.out.println(Thread.currentThread().getName() + "执行了！");\n        return 200;\n    }\n}\n\npublic class CallableDemo {\n\n    public static void main(String[] args) throws ExecutionException, InterruptedException {\n        // 2. 创建Callable的实例，并用FutureTask类来包装Callable对象\n        // 3. 创建FutureTask对象，需要一个Callable类型的参数\n        FutureTask task = new FutureTask<Integer>(new MyCallableThread());\n        // 4. 创建多线程，由于FutureTask的本质是Runnable的实现类，所以第一个参数可以直接使用task\n        new Thread(task, "threadName").start();\n        //new Thread(task, "threadName2").start();\n\t\t\n        /*while (!task.isDone()) {\n            System.out.println("wait...");\n        }*/\n        System.out.println(task.get());\n        System.out.println(Thread.currentThread().getName() + " over!");\n    }\n}\n')])])]),s("h1",{attrs:{id:"_39-同步有几种实现方法-都是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_39-同步有几种实现方法-都是什么"}},[t._v("#")]),t._v(" 39 同步有几种实现方法,都是什么?")]),t._v(" "),s("p",[t._v("非阻塞")]),t._v(" "),s("ol",[s("li",[t._v("volatile")]),t._v(" "),s("li",[t._v("cas及atomic系列实现")])]),t._v(" "),s("p",[t._v("阻塞")]),t._v(" "),s("ol",[s("li",[t._v("wait()")]),t._v(" "),s("li",[t._v("sleep")]),t._v(" "),s("li",[t._v("synchronized")]),t._v(" "),s("li",[t._v("Lock 的实现\n"),s("ol",[s("li",[t._v("ReentrantLock")]),t._v(" "),s("li",[t._v("ReentrantReadWriteLock 等")]),t._v(" "),s("li",[t._v("condition.await()")])])]),t._v(" "),s("li",[t._v("CountDownLatch")]),t._v(" "),s("li",[t._v("CyclicBarrier")]),t._v(" "),s("li",[t._v("Semaphore")]),t._v(" "),s("li",[t._v("BlockingQueue")])])])}),[],!1,null,null,null);s.default=e.exports}}]);