(window.webpackJsonp=window.webpackJsonp||[]).push([[366],{991:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"一、内置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、内置对象"}},[t._v("#")]),t._v(" 一、内置对象")]),t._v(" "),s("blockquote",[s("p",[t._v("官方文档： "),s("a",{attrs:{href:"https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#appendix-a-expression-basic-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thymeleaf 3.0 基础对象"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"七大基础对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#七大基础对象"}},[t._v("#")]),t._v(" 七大基础对象：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("${#ctx}")]),t._v(" 上下文对象，可用于获取其它内置对象。")]),t._v(" "),s("li",[s("code",[t._v("${#param}")]),t._v(": 上下文变量。")]),t._v(" "),s("li",[s("code",[t._v("${#locale}")]),t._v("：上下文区域设置。")]),t._v(" "),s("li",[s("code",[t._v("${#request}")]),t._v(": "),s("code",[t._v("HttpServletRequest")]),t._v("对象。")]),t._v(" "),s("li",[s("code",[t._v("${#response}")]),t._v(": "),s("code",[t._v("HttpServletResponse")]),t._v("对象。")]),t._v(" "),s("li",[s("code",[t._v("${#session}")]),t._v(": "),s("code",[t._v("HttpSession")]),t._v("对象。")]),t._v(" "),s("li",[s("code",[t._v("${#servletContext}")]),t._v(": "),s("code",[t._v("ServletContext")]),t._v("对象。")])]),t._v(" "),s("h2",{attrs:{id:"用法示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用法示例"}},[t._v("#")]),t._v(" 用法示例")]),t._v(" "),s("p",[s("strong",[t._v("locale对象操作：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("th:")]),t._v("text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${#locale.getLanguage() + '_' + #locale.getCountry()}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("strong",[t._v("session对象操作：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("th:")]),t._v("text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${session.foo}?:('zoo')"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("th:")]),t._v("text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${session.size()}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("th:")]),t._v("text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${session.isEmpty()}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("th:")]),t._v("text")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${session.containsKey('foo')}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h1",{attrs:{id:"二、-常用的工具类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、-常用的工具类"}},[t._v("#")]),t._v(" 二、 常用的工具类：")]),t._v(" "),s("blockquote",[s("p",[t._v("官方文档： "),s("a",{attrs:{href:"https://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html#appendix-b-expression-utility-objects",target:"_blank",rel:"noopener noreferrer"}},[t._v("Thymeleaf 3.0 工具类"),s("OutboundLink")],1)])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("#strings")]),t._v("：字符串工具类")]),t._v(" "),s("li",[s("code",[t._v("#lists")]),t._v("：List 工具类")]),t._v(" "),s("li",[s("code",[t._v("#arrays")]),t._v("：数组工具类")]),t._v(" "),s("li",[s("code",[t._v("#sets")]),t._v("：Set 工具类")]),t._v(" "),s("li",[s("code",[t._v("#maps")]),t._v("：常用Map方法。")]),t._v(" "),s("li",[s("code",[t._v("#objects")]),t._v("：一般对象类，通常用来判断非空")]),t._v(" "),s("li",[s("code",[t._v("#bools")]),t._v("：常用的布尔方法。")]),t._v(" "),s("li",[s("code",[t._v("#execInfo")]),t._v("：获取页面模板的处理信息。")]),t._v(" "),s("li",[s("code",[t._v("#messages")]),t._v("：在变量表达式中获取外部消息的方法，与使用＃{...}语法获取的方法相同。")]),t._v(" "),s("li",[s("code",[t._v("#uris")]),t._v("：转义部分URL / URI的方法。")]),t._v(" "),s("li",[s("code",[t._v("#conversions")]),t._v("：用于执行已配置的转换服务的方法。")]),t._v(" "),s("li",[s("code",[t._v("#dates")]),t._v("：时间操作和时间格式化等。")]),t._v(" "),s("li",[s("code",[t._v("#calendars")]),t._v("：用于更复杂时间的格式化。")]),t._v(" "),s("li",[s("code",[t._v("#numbers")]),t._v("：格式化数字对象的方法。")]),t._v(" "),s("li",[s("code",[t._v("#aggregates")]),t._v("：在数组或集合上创建聚合的方法。")]),t._v(" "),s("li",[s("code",[t._v("#ids")]),t._v("：处理可能重复的id属性的方法。")])]),t._v(" "),s("h2",{attrs:{id:"用法举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用法举例"}},[t._v("#")]),t._v(" 用法举例：")]),t._v(" "),s("p",[s("strong",[t._v("date工具类之日期格式化")]),t._v("\n使用默认的日期格式("),s("code",[t._v("toString")]),t._v("方法) 并不是我们预期的格式："),s("code",[t._v("Mon Dec 03 23:16:50 CST 2018")]),t._v("\n此时可以通过时间工具类"),s("code",[t._v("#dates")]),t._v("来对日期进行格式化："),s("code",[t._v("2018-12-03 23:16:50")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("th:")]),t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("${#dates.format(user.createTime,'yyyy-MM-dd HH:mm:ss')}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),s("p",[s("strong",[t._v("首字母大写")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("/*\n * Convert the first character of every word to upper-case\n */\n${#strings.capitalizeWords(str)}                    // also array*, list* and set*\n")])])]),s("p",[s("strong",[t._v("list方法")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("/*\n * Compute size\n */\n${#lists.size(list)}\n\n/*\n * Check whether list is empty\n */\n${#lists.isEmpty(list)}\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);