(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{505:function(t,a,s){t.exports=s.p+"assets/img/20200521173446.b6dc8bf2.png"},506:function(t,a,s){t.exports=s.p+"assets/img/20200521173537.4d00fdb4.png"},507:function(t,a,s){t.exports=s.p+"assets/img/20200521173630.18edd640.png"},508:function(t,a,s){t.exports=s.p+"assets/img/20200521173703.77d322f2.png"},509:function(t,a,s){t.exports=s.p+"assets/img/20200521173939.0629a478.png"},510:function(t,a,s){t.exports=s.p+"assets/img/20200521174037.fb379e43.png"},930:function(t,a,s){"use strict";s.r(a);var E=s(14),r=Object(E.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ul",[a("li",[a("a",{attrs:{href:"#1-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E4%BE%8B%E4%B8%80"}},[t._v("1. 反向代理实例一")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B"}},[t._v("实现过程")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1-%E5%90%AF%E5%8A%A8%E4%B8%80%E4%B8%AA-tomcat%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9C%B0%E5%9D%80%E6%A0%8F%E8%BE%93%E5%85%A5-1270018080%E5%87%BA%E7%8E%B0%E5%A6%82%E4%B8%8B%E7%95%8C%E9%9D%A2"}},[t._v("1. 启动一个 tomcat，浏览器地址栏输入 127.0.0.1:8080，出现如下界面")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#2-%E9%80%9A%E8%BF%87%E4%BF%AE%E6%94%B9%E6%9C%AC%E5%9C%B0-host-%E6%96%87%E4%BB%B6%E5%B0%86-www123com-%E6%98%A0%E5%B0%84%E5%88%B0-127001"}},[t._v("2. 通过修改本地 host 文件，将 www.123.com 映射到 127.0.0.1")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#3-%E5%9C%A8-nginxconf-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E4%B8%AD%E5%A2%9E%E5%8A%A0%E5%A6%82%E4%B8%8B%E9%85%8D%E7%BD%AE"}},[t._v("3. "),a("strong",[t._v("在 nginx.conf 配置文件中增加如下配置")])])])])])])]),t._v(" "),a("li",[a("a",{attrs:{href:"#2-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%AE%9E%E4%BE%8B%E4%BA%8C"}},[t._v("2. 反向代理实例二")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B-1"}},[t._v("实现过程")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#1%E5%87%86%E5%A4%87%E4%B8%A4%E4%B8%AA-tomcat%E4%B8%80%E4%B8%AA-8001-%E7%AB%AF%E5%8F%A3%E4%B8%80%E4%B8%AA-8002-%E7%AB%AF%E5%8F%A3%E5%B9%B6%E5%87%86%E5%A4%87%E5%A5%BD%E6%B5%8B%E8%AF%95%E7%9A%84%E9%A1%B5%E9%9D%A2"}},[t._v("1.准备两个 tomcat，一个 8001 端口，一个 8002 端口，并准备好测试的页面")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#2-%E4%BF%AE%E6%94%B9-nginx-%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%9C%A8-http-%E5%9D%97%E4%B8%AD%E6%B7%BB%E5%8A%A0-server"}},[t._v("2. 修改 nginx 的配置文件在 http 块中添加 server{}")])])])])])])]),t._v(" "),a("h1",{attrs:{id:"_1-反向代理实例一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-反向代理实例一"}},[t._v("#")]),t._v(" 1. 反向代理实例一")]),t._v(" "),a("p",[t._v("实现效果：使用 nginx 反向代理，访问 www.123.com 直接跳转到 127.0.0.1:8080")]),t._v(" "),a("h2",{attrs:{id:"实现过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现过程"}},[t._v("#")]),t._v(" 实现过程")]),t._v(" "),a("h3",{attrs:{id:"_1-启动一个-tomcat-浏览器地址栏输入-127-0-0-1-8080-出现如下界面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-启动一个-tomcat-浏览器地址栏输入-127-0-0-1-8080-出现如下界面"}},[t._v("#")]),t._v(" 1. 启动一个 tomcat，浏览器地址栏输入 127.0.0.1:8080，出现如下界面")]),t._v(" "),a("p",[a("img",{attrs:{src:s(505),alt:""}})]),t._v(" "),a("h3",{attrs:{id:"_2-通过修改本地-host-文件-将-www-123-com-映射到-127-0-0-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-通过修改本地-host-文件-将-www-123-com-映射到-127-0-0-1"}},[t._v("#")]),t._v(" 2. 通过修改本地 host 文件，将 www.123.com 映射到 127.0.0.1")]),t._v(" "),a("p",[a("img",{attrs:{src:s(506),alt:""}})]),t._v(" "),a("p",[t._v("配置完成之后，我们便可以通过 www.123.com:8080 访问到第一步出现的 Tomcat 初始界面。那么如何只需要输入 www.123.com 便可以跳转到 Tomcat 初始界面呢？便用到 nginx 的反向代理。")]),t._v(" "),a("h3",{attrs:{id:"_3-在-nginx-conf-配置文件中增加如下配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-在-nginx-conf-配置文件中增加如下配置"}},[t._v("#")]),t._v(" 3. "),a("strong",[t._v("在 nginx.conf 配置文件中增加如下配置")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(507),alt:""}})]),t._v(" "),a("p",[t._v("如上配置，我们监听 80 端口，访问域名为 www.123.com，不加端口号时默认为 80 端口，故访问该域名时会跳转到 127.0.0.1:8080 路径上。在浏览器端输入 www.123.com 结果如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(508),alt:""}})]),t._v(" "),a("h1",{attrs:{id:"_2-反向代理实例二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-反向代理实例二"}},[t._v("#")]),t._v(" 2. 反向代理实例二")]),t._v(" "),a("p",[t._v("实现效果：使用 nginx 反向代理，根据访问的路径跳转到不同端口的服务中 nginx 监听端口为 9001，")]),t._v(" "),a("blockquote",[a("p",[t._v("访问 http://127.0.0.1:9001/edu/ 直接跳转到 127.0.0.1:8081")]),t._v(" "),a("p",[t._v("访问 http://127.0.0.1:9001/vod/ 直接跳转到 127.0.0.1:8082")])]),t._v(" "),a("h2",{attrs:{id:"实现过程-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现过程-2"}},[t._v("#")]),t._v(" 实现过程")]),t._v(" "),a("h3",{attrs:{id:"_1-准备两个-tomcat-一个-8001-端口-一个-8002-端口-并准备好测试的页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备两个-tomcat-一个-8001-端口-一个-8002-端口-并准备好测试的页面"}},[t._v("#")]),t._v(" 1.准备两个 tomcat，一个 8001 端口，一个 8002 端口，并准备好测试的页面")]),t._v(" "),a("h3",{attrs:{id:"_2-修改-nginx-的配置文件在-http-块中添加-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改-nginx-的配置文件在-http-块中添加-server"}},[t._v("#")]),t._v(" 2. 修改 nginx 的配置文件在 http 块中添加 server{}")]),t._v(" "),a("p",[a("img",{attrs:{src:s(509),alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("location")]),t._v(" "),a("strong",[t._v("指令说明")]),t._v("   该指令用于匹配 URL。")]),t._v(" "),a("p",[t._v("语法如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:s(510),alt:""}})]),t._v(" "),a("ol",[a("li",[t._v("= ：用于不含正则表达式的 uri 前，要求请求字符串与 uri 严格匹配，如果匹配成功，就停止继续向下搜索并立即处理该请求。")]),t._v(" "),a("li",[t._v("~：用于表示 uri 包含正则表达式，并且区分大小写。")]),t._v(" "),a("li",[t._v("~*：用于表示 uri 包含正则表达式，并且不区分大小写。")]),t._v(" "),a("li",[t._v("^~：用于不含正则表达式的 uri 前，要求 Nginx 服务器找到标识 uri 和请求字符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再使用 location 块中的正则 uri 和请求字符串做匹配。")])]),t._v(" "),a("p",[a("em",[a("em",[t._v("注意：如果 uri 包含正则表达式，则必须要有 ~ 或者 ~")]),t._v(" 标识。")]),t._v("*")])])}),[],!1,null,null,null);a.default=r.exports}}]);