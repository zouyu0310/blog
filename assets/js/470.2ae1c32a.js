(window.webpackJsonp=window.webpackJsonp||[]).push([[470],{1130:function(a,s,t){"use strict";t.r(s);var e=t(14),r=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"docker介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker介绍"}},[a._v("#")]),a._v(" Docker介绍")]),a._v(" "),s("p",[a._v("开始之前，还是简单介绍一下 Docker，更多 Docker 概念介绍可以看前一篇文章"),s("RouterLink",{attrs:{to:"/tools/docker/docker-intro.html"}},[a._v("Docker 核心概念总结")]),a._v("。")],1),a._v(" "),s("h3",{attrs:{id:"什么是-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-docker"}},[a._v("#")]),a._v(" 什么是 Docker？")]),a._v(" "),s("p",[a._v("说实话关于 Docker 是什么并不太好说，下面我通过四点向你说明 Docker 到底是个什么东西。")]),a._v(" "),s("ul",[s("li",[a._v("Docker 是世界领先的软件容器平台，基于 "),s("strong",[a._v("Go 语言")]),a._v(" 进行开发实现。")]),a._v(" "),s("li",[a._v("Docker 能够自动执行重复性任务，例如搭建和配置开发环境，从而解放开发人员。")]),a._v(" "),s("li",[a._v("用户可以方便地创建和使用容器，把自己的应用放入容器。容器还可以进行版本管理、复制、分享、修改，就像管理普通的代码一样。")]),a._v(" "),s("li",[a._v("Docker 可以"),s("strong",[a._v("对进程进行封装隔离，属于操作系统层面的虚拟化技术。")]),a._v(" 由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。")])]),a._v(" "),s("p",[a._v("官网地址：https://www.docker.com/ 。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://my-blog-to-use.oss-cn-beijing.aliyuncs.com/2019-7/container.png",alt:"认识容器"}})]),a._v(" "),s("h3",{attrs:{id:"为什么要用-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用-docker"}},[a._v("#")]),a._v(" 为什么要用 Docker?")]),a._v(" "),s("p",[a._v("Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。")]),a._v(" "),s("p",[a._v("容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app），更重要的是容器性能开销极低。")]),a._v(" "),s("p",[a._v("传统的开发流程中，我们的项目通常需要使用 MySQL、Redis、FastDFS 等等环境，这些环境都是需要我们手动去进行下载并配置的，安装配置流程极其复杂，而且不同系统下的操作也不一样。")]),a._v(" "),s("p",[a._v("Docker 的出现完美地解决了这一问题，我们可以在容器中安装 MySQL、Redis 等软件环境，使得应用和环境架构分开，它的优势在于：")]),a._v(" "),s("ol",[s("li",[a._v("一致的运行环境，能够更轻松地迁移")]),a._v(" "),s("li",[a._v("对进程进行封装隔离，容器与容器之间互不影响，更高效地利用系统资源")]),a._v(" "),s("li",[a._v("可以通过镜像复制多个一致的容器")])]),a._v(" "),s("p",[a._v("另外，"),s("a",{attrs:{href:"https://yeasy.gitbook.io/docker_practice/introduction/why",target:"_blank",rel:"noopener noreferrer"}},[a._v("《Docker 从入门到实践》"),s("OutboundLink")],1),a._v(" 这本开源书籍中也已经给出了使用 Docker 的原因。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/20210412220015698.png",alt:""}})]),a._v(" "),s("h2",{attrs:{id:"docker-的安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-的安装"}},[a._v("#")]),a._v(" Docker 的安装")]),a._v(" "),s("h3",{attrs:{id:"windows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[a._v("#")]),a._v(" Windows")]),a._v(" "),s("p",[a._v("接下来对 Docker 进行安装，以 Windows 系统为例，访问 Docker 的官网：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-4e3146984adaee0067bdc5e9b1d757bb479.png",alt:""}})]),a._v(" "),s("p",[a._v("然后点击"),s("code",[a._v("Get Started")]),a._v("：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-96adfbfebe3e59097c8ba25e55f68ba7908.png",alt:""}})]),a._v(" "),s("p",[a._v("在此处点击"),s("code",[a._v("Download for Windows")]),a._v("即可进行下载。")]),a._v(" "),s("p",[a._v("如果你的电脑是"),s("code",[a._v("Windows 10 64位专业版")]),a._v("的操作系统，则在安装 Docker 之前需要开启一下"),s("code",[a._v("Hyper-V")]),a._v("，开启方式如下。打开控制面板，选择程序：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-73ce678240826de0f49225250a970b4d205.png",alt:""}})]),a._v(" "),s("p",[a._v("点击"),s("code",[a._v("启用或关闭Windows功能")]),a._v("：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-9c7a96c332e56b9506325a1f1fdb608a659.png",alt:""}})]),a._v(" "),s("p",[a._v("勾选上"),s("code",[a._v("Hyper-V")]),a._v("，点击确定即可：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-aad4a58c5e917f7185908d6320d7fb06861.png",alt:""}})]),a._v(" "),s("p",[a._v("完成更改后需要重启一下计算机。")]),a._v(" "),s("p",[a._v("开启了"),s("code",[a._v("Hyper-V")]),a._v("后，我们就可以对 Docker 进行安装了，打开安装程序后，等待片刻点击"),s("code",[a._v("Ok")]),a._v("即可：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-62ac3c9184bdc21387755294613ff5054c6.png",alt:""}})]),a._v(" "),s("p",[a._v("安装完成后，我们仍然需要重启计算机，重启后，若提示如下内容：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-3585c7d6a4632134ed925493a7d43e14a43.png",alt:""}})]),a._v(" "),s("p",[a._v("它的意思是询问我们是否使用 WSL2，这是基于 Windows 的一个 Linux 子系统，这里我们取消即可，它就会使用我们之前勾选的"),s("code",[a._v("Hyper-V")]),a._v("虚拟机。")]),a._v(" "),s("p",[a._v("因为是图形界面的操作，这里就不介绍 Docker Desktop 的具体用法了。")]),a._v(" "),s("h3",{attrs:{id:"mac"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mac"}},[a._v("#")]),a._v(" Mac")]),a._v(" "),s("p",[a._v("直接使用 Homebrew 安装即可")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("brew "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cask")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),s("h3",{attrs:{id:"linux"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[a._v("#")]),a._v(" Linux")]),a._v(" "),s("p",[a._v("下面来看看 Linux 中如何安装 Docker，这里以 CentOS7 为例。")]),a._v(" "),s("p",[a._v("在测试或开发环境中，Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，执行这个脚本后就会自动地将一切准备工作做好，并且把 Docker 的稳定版本安装在系统中。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-fsSL")]),a._v(" get.docker.com "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" get-docker.sh\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sh")]),a._v(" get-docker.sh "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--mirror")]),a._v(" Aliyun\n")])])]),s("p",[a._v("安装完成后直接启动服务：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("systemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),s("p",[a._v("推荐设置开机自启，执行指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),s("h2",{attrs:{id:"docker-中的几个概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-中的几个概念"}},[a._v("#")]),a._v(" Docker 中的几个概念")]),a._v(" "),s("p",[a._v("在正式学习 Docker 之前，我们需要了解 Docker 中的几个核心概念：")]),a._v(" "),s("h3",{attrs:{id:"镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像"}},[a._v("#")]),a._v(" 镜像")]),a._v(" "),s("p",[a._v("镜像就是一个只读的模板，镜像可以用来创建 Docker 容器，一个镜像可以创建多个容器")]),a._v(" "),s("h3",{attrs:{id:"容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#容器"}},[a._v("#")]),a._v(" 容器")]),a._v(" "),s("p",[a._v("容器是用镜像创建的运行实例，Docker 利用容器独立运行一个或一组应用。它可以被启动、开始、停止、删除，每个容器都是相互隔离的、保证安全的平台。 可以把容器看作是一个简易的 Linux 环境和运行在其中的应用程序。容器的定义和镜像几乎一模一样，也是一堆层的统一视角，唯一区别在于容器的最上面那一层是可读可写的")]),a._v(" "),s("h3",{attrs:{id:"仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#仓库"}},[a._v("#")]),a._v(" 仓库")]),a._v(" "),s("p",[a._v("仓库是集中存放镜像文件的场所。仓库和仓库注册服务器是有区别的，仓库注册服务器上往往存放着多个仓库，每个仓库中又包含了多个镜像，每个镜像有不同的标签。 仓库分为公开仓库和私有仓库两种形式，最大的公开仓库是 DockerHub，存放了数量庞大的镜像供用户下载，国内的公开仓库有阿里云、网易云等")]),a._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("通俗点说，一个镜像就代表一个软件；而基于某个镜像运行就是生成一个程序实例，这个程序实例就是容器；而仓库是用来存储 Docker 中所有镜像的。")]),a._v(" "),s("p",[a._v("其中仓库又分为远程仓库和本地仓库，和 Maven 类似，倘若每次都从远程下载依赖，则会大大降低效率，为此，Maven 的策略是第一次访问依赖时，将其下载到本地仓库，第二次、第三次使用时直接用本地仓库的依赖即可，Docker 的远程仓库和本地仓库的作用也是类似的。")]),a._v(" "),s("h2",{attrs:{id:"docker-初体验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-初体验"}},[a._v("#")]),a._v(" Docker 初体验")]),a._v(" "),s("p",[a._v("下面我们来对 Docker 进行一个初步的使用，这里以下载一个 MySQL 的镜像为例"),s("code",[a._v("(在CentOS7下进行)")]),a._v("。")]),a._v(" "),s("p",[a._v("和 GitHub 一样，Docker 也提供了一个 DockerHub 用于查询各种镜像的地址和安装教程，为此，我们先访问 DockerHub："),s("a",{attrs:{href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://hub.docker.com/"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-37d083cc92fe36aad829e975646b9d27fa0.png",alt:""}})]),a._v(" "),s("p",[a._v("在左上角的搜索框中输入"),s("code",[a._v("MySQL")]),a._v("并回车：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-ced37002391a059754def9b3a6c2aa4e342.png",alt:""}})]),a._v(" "),s("p",[a._v("可以看到相关 MySQL 的镜像非常多，若右上角有"),s("code",[a._v("OFFICIAL IMAGE")]),a._v("标识，则说明是官方镜像，所以我们点击第一个 MySQL 镜像：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-48ba3fdc99c93a96e18b929195ca8e93c6c.png",alt:""}})]),a._v(" "),s("p",[a._v("右边提供了下载 MySQL 镜像的指令为"),s("code",[a._v("docker pull MySQL")]),a._v("，但该指令始终会下载 MySQL 镜像的最新版本。")]),a._v(" "),s("p",[a._v("若是想下载指定版本的镜像，则点击下面的"),s("code",[a._v("View Available Tags")]),a._v("：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-ed601649275c6cfe65bbe422b463c263a64.png",alt:""}})]),a._v(" "),s("p",[a._v("这里就可以看到各种版本的镜像，右边有下载的指令，所以若是想下载 5.7.32 版本的 MySQL 镜像，则执行：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull MySQL:5.7.32\n")])])]),s("p",[a._v("然而下载镜像的过程是非常慢的，所以我们需要配置一下镜像源加速下载，访问"),s("code",[a._v("阿里云")]),a._v("官网：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-0a46effd262d3db1b613a0db597efa31f34.png",alt:""}})]),a._v(" "),s("p",[a._v("点击控制台：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-60f198e0106be6b43044969d2900272504f.png",alt:""}})]),a._v(" "),s("p",[a._v("然后点击左上角的菜单，在弹窗的窗口中，将鼠标悬停在产品与服务上，并在右侧搜索容器镜像服务，最后点击容器镜像服务：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-2f6706a979b405dab01bc44a29bb6b26fc4.png",alt:""}})]),a._v(" "),s("p",[a._v("点击左侧的镜像加速器，并依次执行右侧的配置指令即可。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" /etc/docker\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tee")]),a._v(" /etc/docker/daemon.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<-")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'EOF\'\n{\n  "registry-mirrors": ["https://679xpnpz.mirror.aliyuncs.com"]\n}\nEOF')]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl daemon-reload\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),s("h2",{attrs:{id:"docker-镜像指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-镜像指令"}},[a._v("#")]),a._v(" Docker 镜像指令")]),a._v(" "),s("p",[a._v("Docker 需要频繁地操作相关的镜像，所以我们先来了解一下 Docker 中的镜像指令。")]),a._v(" "),s("p",[a._v("若想查看 Docker 中当前拥有哪些镜像，则可以使用 "),s("code",[a._v("docker images")]),a._v(" 命令。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@izrcf5u3j3q8xaz ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker images")]),a._v("\nREPOSITORY    TAG       IMAGE ID       CREATED         SIZE\nMySQL         "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v(".32    f07dfa83b528   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(" days ago     448MB\ntomcat        latest    feba8d001e3f   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" weeks ago     649MB\nnginx         latest    ae2feff98a0c   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" weeks ago     133MB\nhello-world   latest    bf756fb1ae65   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),a._v(" months ago   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(".3kB\n")])])]),s("p",[a._v("其中"),s("code",[a._v("REPOSITORY")]),a._v("为镜像名，"),s("code",[a._v("TAG")]),a._v("为版本标志，"),s("code",[a._v("IMAGE ID")]),a._v("为镜像 id(唯一的)，"),s("code",[a._v("CREATED")]),a._v("为创建时间，注意这个时间并不是我们将镜像下载到 Docker 中的时间，而是镜像创建者创建的时间，"),s("code",[a._v("SIZE")]),a._v("为镜像大小。")]),a._v(" "),s("p",[a._v("该指令能够查询指定镜像名：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image MySQL\n")])])]),s("p",[a._v("若如此做，则会查询出 Docker 中的所有 MySQL 镜像：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@izrcf5u3j3q8xaz ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker images MySQL")]),a._v("\nREPOSITORY   TAG       IMAGE ID       CREATED         SIZE\nMySQL        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.6")]),a._v("       0ebb5600241d   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(" days ago     302MB\nMySQL        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.7")]),a._v(".32    f07dfa83b528   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v(" days ago     448MB\nMySQL        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.5")]),a._v("       d404d78aa797   "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),a._v(" months ago   205MB\n")])])]),s("p",[a._v("该指令还能够携带"),s("code",[a._v("-q")]),a._v("参数："),s("code",[a._v("docker images -q")]),a._v(" ， "),s("code",[a._v("-q")]),a._v("表示仅显示镜像的 id：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@izrcf5u3j3q8xaz ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker images -q")]),a._v("\n0ebb5600241d\nf07dfa83b528\nfeba8d001e3f\nd404d78aa797\n")])])]),s("p",[a._v("若是要下载镜像，则使用：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull MySQL:5.7\n")])])]),s("p",[s("code",[a._v("docker pull")]),a._v("是固定的，后面写上需要下载的镜像名及版本标志；若是不写版本标志，而是直接执行"),s("code",[a._v("docker pull MySQL")]),a._v("，则会下载镜像的最新版本。")]),a._v(" "),s("p",[a._v("一般在下载镜像前我们需要搜索一下镜像有哪些版本才能对指定版本进行下载，使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" search MySQL\n")])])]),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-559083ae80e7501e86e95fbbad25b6d571a.png",alt:""}})]),a._v(" "),s("p",[a._v("不过该指令只能查看 MySQL 相关的镜像信息，而不能知道有哪些版本，若想知道版本，则只能这样查询：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" search MySQL:5.5\n")])])]),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-68394e25f652964bb042571151c5e0fd2e9.png",alt:""}})]),a._v(" "),s("p",[a._v("若是查询的版本不存在，则结果为空：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-abfdd51b9ad2ced3711268369f52b077b12.png",alt:""}})]),a._v(" "),s("p",[a._v("删除镜像使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" MySQL:5.5\n")])])]),s("p",[a._v("若是不指定版本，则默认删除的也是最新版本。")]),a._v(" "),s("p",[a._v("还可以通过指定镜像 id 进行删除：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" bf756fb1ae65\n")])])]),s("p",[a._v("然而此时报错了：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@izrcf5u3j3q8xaz ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker image rm bf756fb1ae65")]),a._v("\nError response from daemon: conflict: unable to delete bf756fb1ae65 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("must be forced"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" - image is being used by stopped container d5b6c177c151\n")])])]),s("p",[a._v("这是因为要删除的"),s("code",[a._v("hello-world")]),a._v("镜像正在运行中，所以无法删除镜像，此时需要强制执行删除：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" image "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" bf756fb1ae65\n")])])]),s("p",[a._v("该指令会将镜像和通过该镜像执行的容器全部删除，谨慎使用。")]),a._v(" "),s("p",[a._v("Docker 还提供了删除镜像的简化版本："),s("code",[a._v("docker rmi 镜像名:版本标志")]),a._v(" 。")]),a._v(" "),s("p",[a._v("此时我们即可借助"),s("code",[a._v("rmi")]),a._v("和"),s("code",[a._v("-q")]),a._v("进行一些联合操作，比如现在想删除所有的 MySQL 镜像，那么你需要查询出 MySQL 镜像的 id，并根据这些 id 一个一个地执行"),s("code",[a._v("docker rmi")]),a._v("进行删除，但是现在，我们可以这样：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" rmi "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images MySQL "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),s("p",[a._v("首先通过"),s("code",[a._v("docker images MySQL -q")]),a._v("查询出 MySQL 的所有镜像 id，"),s("code",[a._v("-q")]),a._v("表示仅查询 id，并将这些 id 作为参数传递给"),s("code",[a._v("docker rmi -f")]),a._v("指令，这样所有的 MySQL 镜像就都被删除了。")]),a._v(" "),s("h2",{attrs:{id:"docker-容器指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-容器指令"}},[a._v("#")]),a._v(" Docker 容器指令")]),a._v(" "),s("p",[a._v("掌握了镜像的相关指令之后，我们需要了解一下容器的指令，容器是基于镜像的。")]),a._v(" "),s("p",[a._v("若需要通过镜像运行一个容器，则使用：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run tomcat:8.0-jre8\n")])])]),s("p",[a._v("当然了，运行的前提是你拥有这个镜像，所以先下载镜像：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull tomcat:8.0-jre8\n")])])]),s("p",[a._v("下载完成后就可以运行了，运行后查看一下当前运行的容器："),s("code",[a._v("docker ps")]),a._v(" 。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-bd48e20ef07b7c91ad16f92821a3dbca5b5.png",alt:""}})]),a._v(" "),s("p",[a._v("其中"),s("code",[a._v("CONTAINER_ID")]),a._v("为容器的 id，"),s("code",[a._v("IMAGE")]),a._v("为镜像名，"),s("code",[a._v("COMMAND")]),a._v("为容器内执行的命令，"),s("code",[a._v("CREATED")]),a._v("为容器的创建时间，"),s("code",[a._v("STATUS")]),a._v("为容器的状态，"),s("code",[a._v("PORTS")]),a._v("为容器内服务监听的端口，"),s("code",[a._v("NAMES")]),a._v("为容器的名称。")]),a._v(" "),s("p",[a._v("通过该方式运行的 tomcat 是不能直接被外部访问的，因为容器具有隔离性，若是想直接通过 8080 端口访问容器内部的 tomcat，则需要对宿主机端口与容器内的端口进行映射：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 tomcat:8.0-jre8\n")])])]),s("p",[a._v("解释一下这两个端口的作用("),s("code",[a._v("8080:8080")]),a._v(")，第一个 8080 为宿主机端口，第二个 8080 为容器内的端口，外部访问 8080 端口就会通过映射访问容器内的 8080 端口。")]),a._v(" "),s("p",[a._v("此时外部就可以访问 Tomcat 了：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-16d9ff4d29094681f51424ea8d0ee4fd73e.png",alt:""}})]),a._v(" "),s("p",[a._v("若是这样进行映射：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8088")]),a._v(":8080 tomcat:8.0-jre8\n")])])]),s("p",[a._v("则外部需访问 8088 端口才能访问 tomcat，需要注意的是，每次运行的容器都是相互独立的，所以同时运行多个 tomcat 容器并不会产生端口的冲突。")]),a._v(" "),s("p",[a._v("容器还能够以后台的方式运行，这样就不会占用终端：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 tomcat:8.0-jre8\n")])])]),s("p",[a._v("启动容器时默认会给容器一个名称，但这个名称其实是可以设置的，使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" tomcat01 tomcat:8.0-jre8\n")])])]),s("p",[a._v("此时的容器名称即为 tomcat01，容器名称必须是唯一的。")]),a._v(" "),s("p",[a._v("再来引申一下"),s("code",[a._v("docker ps")]),a._v("中的几个指令参数，比如"),s("code",[a._v("-a")]),a._v("：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n")])])]),s("p",[a._v("该参数会将运行和非运行的容器全部列举出来：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-16d9ff4d29094681f51424ea8d0ee4fd73e.png",alt:""}})]),a._v(" "),s("p",[s("code",[a._v("-q")]),a._v("参数将只查询正在运行的容器 id："),s("code",[a._v("docker ps -q")]),a._v(" 。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@izrcf5u3j3q8xaz ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker ps -q")]),a._v("\nf3aac8ee94a3\n074bf575249b\n1d557472a708\n4421848ba294\n")])])]),s("p",[a._v("若是组合使用，则查询运行和非运行的所有容器 id："),s("code",[a._v("docker ps -qa")]),a._v(" 。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@izrcf5u3j3q8xaz ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker ps -aq")]),a._v("\nf3aac8ee94a3\n7f7b0e80c841\n074bf575249b\na1e830bddc4c\n1d557472a708\n4421848ba294\nb0440c0a219a\nc2f5d78c5d1a\n5831d1bab2a6\nd5b6c177c151\n")])])]),s("p",[a._v("接下来是容器的停止、重启指令，因为非常简单，就不过多介绍了。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start c2f5d78c5d1a\n")])])]),s("p",[a._v("通过该指令能够将已经停止运行的容器运行起来，可以通过容器的 id 启动，也可以通过容器的名称启动。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" restart c2f5d78c5d1a\n")])])]),s("p",[a._v("该指令能够重启指定的容器。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" stop c2f5d78c5d1a\n")])])]),s("p",[a._v("该指令能够停止指定的容器。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" c2f5d78c5d1a\n")])])]),s("p",[a._v("该指令能够直接杀死指定的容器。")]),a._v(" "),s("p",[a._v("以上指令都能够通过容器的 id 和容器名称两种方式配合使用。")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("当容器被停止之后，容器虽然不再运行了，但仍然是存在的，若是想删除它，则使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" d5b6c177c151\n")])])]),s("p",[a._v("需要注意的是容器的 id 无需全部写出来，只需唯一标识即可。")]),a._v(" "),s("p",[a._v("若是想删除正在运行的容器，则需要添加"),s("code",[a._v("-f")]),a._v("参数强制删除：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" d5b6c177c151\n")])])]),s("p",[a._v("若是想删除所有容器，则可以使用组合指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-qa")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),s("p",[a._v("先通过"),s("code",[a._v("docker ps -qa")]),a._v("查询出所有容器的 id，然后通过"),s("code",[a._v("docker rm -f")]),a._v("进行删除。")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("当容器以后台的方式运行时，我们无法知晓容器的运行状态，若此时需要查看容器的运行日志，则使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs 289cc00dc5ed\n")])])]),s("p",[a._v("这样的方式显示的日志并不是实时的，若是想实时显示，需要使用"),s("code",[a._v("-f")]),a._v("参数：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" 289cc00dc5ed\n")])])]),s("p",[a._v("通过"),s("code",[a._v("-t")]),a._v("参数还能够显示日志的时间戳，通常与"),s("code",[a._v("-f")]),a._v("参数联合使用：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" logs "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ft")]),a._v(" 289cc00dc5ed\n")])])]),s("hr"),a._v(" "),s("p",[a._v("查看容器内运行了哪些进程，可以使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("top")]),a._v(" 289cc00dc5ed\n")])])]),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-7ec71a682712e56e90490f55c32cf660fd3.png",alt:""}})]),a._v(" "),s("p",[a._v("若是想与容器进行交互，则使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" 289cc00dc5ed "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("bash")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-fd17796322f833685ca8ead592d38581898.png",alt:""}})]),a._v(" "),s("p",[a._v("此时终端将会进入容器内部，执行的指令都将在容器中生效，在容器内只能执行一些比较简单的指令，如：ls、cd 等，若是想退出容器终端，重新回到 CentOS 中，则执行"),s("code",[a._v("exit")]),a._v("即可。")]),a._v(" "),s("p",[a._v("现在我们已经能够进入容器终端执行相关操作了，那么该如何向 tomcat 容器中部署一个项目呢？")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" ./test.html 289cc00dc5ed:/usr/local/tomcat/webapps\n")])])]),s("p",[a._v("通过"),s("code",[a._v("docker cp")]),a._v("指令能够将文件从 CentOS 复制到容器中，"),s("code",[a._v("./test.html")]),a._v("为 CentOS 中的资源路径，"),s("code",[a._v("289cc00dc5ed")]),a._v("为容器 id，"),s("code",[a._v("/usr/local/tomcat/webapps")]),a._v("为容器的资源路径，此时"),s("code",[a._v("test.html")]),a._v("文件将会被复制到该路径下。")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@izrcf5u3j3q8xaz ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker exec -it 289cc00dc5ed bash")]),a._v("\nroot@289cc00dc5ed:/usr/local/tomcat"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd webapps")]),a._v("\nroot@289cc00dc5ed:/usr/local/tomcat/webapps"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ls")]),a._v("\ntest.html\nroot@289cc00dc5ed:/usr/local/tomcat/webapps"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n")])])]),s("p",[a._v("若是想将容器内的文件复制到 CentOS 中，则反过来写即可：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cp")]),a._v(" 289cc00dc5ed:/usr/local/tomcat/webapps/test.html ./\n")])])]),s("p",[a._v("所以现在若是想要部署项目，则先将项目上传到 CentOS，然后将项目从 CentOS 复制到容器内，此时启动容器即可。")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("虽然使用 Docker 启动软件环境非常简单，但同时也面临着一个问题，我们无法知晓容器内部具体的细节，比如监听的端口、绑定的 ip 地址等等，好在这些 Docker 都帮我们想到了，只需使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" inspect 923c969b0d91\n")])])]),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-fca74d4350cdfebfc2b06101e1cab411619.png",alt:""}})]),a._v(" "),s("h2",{attrs:{id:"docker-数据卷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-数据卷"}},[a._v("#")]),a._v(" Docker 数据卷")]),a._v(" "),s("p",[a._v("学习了容器的相关指令之后，我们来了解一下 Docker 中的数据卷，它能够实现宿主机与容器之间的文件共享，它的好处在于我们对宿主机的文件进行修改将直接影响容器，而无需再将宿主机的文件再复制到容器中。")]),a._v(" "),s("p",[a._v("现在若是想将宿主机中"),s("code",[a._v("/opt/apps")]),a._v("目录与容器中"),s("code",[a._v("webapps")]),a._v("目录做一个数据卷，则应该这样编写指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" tomcat01 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /opt/apps:/usr/local/tomcat/webapps tomcat:8.0-jre8\n")])])]),s("p",[a._v("然而此时访问 tomcat 会发现无法访问：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-8fa1b23f6ea2567b5938370e7d7f636533f.png",alt:""}})]),a._v(" "),s("p",[a._v("这就说明我们的数据卷设置成功了，Docker 会将容器内的"),s("code",[a._v("webapps")]),a._v("目录与"),s("code",[a._v("/opt/apps")]),a._v("目录进行同步，而此时"),s("code",[a._v("/opt/apps")]),a._v("目录是空的，导致"),s("code",[a._v("webapps")]),a._v("目录也会变成空目录，所以就访问不到了。")]),a._v(" "),s("p",[a._v("此时我们只需向"),s("code",[a._v("/opt/apps")]),a._v("目录下添加文件，就会使得"),s("code",[a._v("webapps")]),a._v("目录也会拥有相同的文件，达到文件共享，测试一下：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd apps/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 apps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# vim test.html")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 apps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ls")]),a._v("\ntest.html\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 apps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cat test.html")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("h"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("1")]),a._v(">")]),a._v("This is a "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v(" html"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("/h"),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[a._v("1")]),a._v(">")]),a._v("\n")])])]),s("p",[a._v("在"),s("code",[a._v("/opt/apps")]),a._v("目录下创建了一个 "),s("code",[a._v("test.html")]),a._v(" 文件，那么容器内的"),s("code",[a._v("webapps")]),a._v("目录是否会有该文件呢？进入容器的终端：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 apps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker exec -it tomcat01 bash")]),a._v("\nroot@115155c08687:/usr/local/tomcat"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd webapps/")]),a._v("\nroot@115155c08687:/usr/local/tomcat/webapps"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ls")]),a._v("\ntest.html\n")])])]),s("p",[a._v("容器内确实已经有了该文件，那接下来我们编写一个简单的 Web 应用：")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HelloServlet")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("extends")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServlet")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("doGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServletRequest")]),a._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServletResponse")]),a._v(" resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServletException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IOException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("getWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Hello World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Override")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("doPost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServletRequest")]),a._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("HttpServletResponse")]),a._v(" resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ServletException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("IOException")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("doGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("resp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("这是一个非常简单的 Servlet，我们将其打包上传到"),s("code",[a._v("/opt/apps")]),a._v("中，那么容器内肯定就会同步到该文件，此时进行访问：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://oscimg.oschina.net/oscnet/up-712716a8c8c444ba3a77ade8ff27e7c6cf5.png",alt:""}})]),a._v(" "),s("p",[a._v("这种方式设置的数据卷称为自定义数据卷，因为数据卷的目录是由我们自己设置的，Docker 还为我们提供了另外一种设置数据卷的方式：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" tomcat01 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" aa:/usr/local/tomcat/webapps tomcat:8.0-jre8\n")])])]),s("p",[a._v("此时的"),s("code",[a._v("aa")]),a._v("并不是数据卷的目录，而是数据卷的别名，Docker 会为我们自动创建一个名为"),s("code",[a._v("aa")]),a._v("的数据卷，并且会将容器内"),s("code",[a._v("webapps")]),a._v("目录下的所有内容复制到数据卷中，该数据卷的位置在"),s("code",[a._v("/var/lib/docker/volumes")]),a._v("目录下：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 volumes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# pwd")]),a._v("\n/var/lib/docker/volumes\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 volumes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd aa/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 aa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ls")]),a._v("\n_data\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 aa"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# cd _data/")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 _data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ls")]),a._v("\ndocs  examples  host-manager  manager  ROOT\n")])])]),s("p",[a._v("此时我们只需修改该目录的内容就能能够影响到容器。")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("最后再介绍几个容器和镜像相关的指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" commit "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"描述信息"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"镜像作者"')]),a._v(" tomcat01 my_tomcat:1.0\n")])])]),s("p",[a._v("该指令能够将容器打包成一个镜像，此时查询镜像：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 _data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker images")]),a._v("\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nmy_tomcat           "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v("                 79ab047fade5        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" seconds ago       463MB\ntomcat              "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("                   a041be4a5ba5        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" weeks ago         533MB\nMySQL               latest              db2b37ec6181        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" months ago        545MB\n")])])]),s("p",[a._v("若是想将镜像备份出来，则可以使用指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" save my_tomcat:1.0 "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" my-tomcat-1.0.tar\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker save my_tomcat:1.0 -o my-tomcat-1.0.tar")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ls")]),a._v("\nanaconda-ks.cfg  initial-setup-ks.cfg  公共  视频  文档  音乐\nget-docker.sh    my-tomcat-1.0.tar     模板  图片  下载  桌面\n")])])]),s("p",[a._v("若是拥有"),s("code",[a._v(".tar")]),a._v("格式的镜像，该如何将其加载到 Docker 中呢？执行指令：")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" load "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-i")]),a._v(" my-tomcat-1.0.tar\n")])])]),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("root@centos-7 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker load -i my-tomcat-1.0.tar")]),a._v("\nb28ef0b6fef8: Loading layer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("105")]),a._v(".5MB/105.5MB\n0b703c74a09c: Loading layer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("23")]),a._v(".99MB/23.99MB\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("\nLoaded image: my_tomcat:1.0\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@centos-7 ~"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker images")]),a._v("\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nmy_tomcat           "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),a._v("                 79ab047fade5        "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v(" minutes ago       463MB\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);