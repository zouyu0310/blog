(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{1050:function(n,a,t){"use strict";t.r(a);var s=t(14),e=Object(s.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"_101-nacos之服务配置中心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_101-nacos之服务配置中心"}},[n._v("#")]),n._v(" 101_Nacos之服务配置中心")]),n._v(" "),a("p",[n._v("基础配置")]),n._v(" "),a("p",[n._v("cloudalibaba-config-nacos-client3377")]),n._v(" "),a("p",[n._v("POM")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<dependencies>\n        \x3c!--nacos-config--\x3e\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\n        </dependency>\n        \x3c!--nacos-discovery--\x3e\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n        </dependency>\n        \x3c!--web + actuator--\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        \x3c!--一般基础配置--\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n")])])]),a("p",[n._v("YML")]),n._v(" "),a("p",[n._v("Nacos同springcloud-config一样，在项目初始化时，要保证先从配置中心进行配置拉取，拉取配置之后，才能保证项目的正常启动。")]),n._v(" "),a("p",[n._v("springboot中配置文件的加载是存在优先级顺序的，bootstrap优先级高于application")]),n._v(" "),a("p",[n._v("bootstrap  -- 重点配置放在这")]),n._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# nacos配置")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("3377")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("application")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" nacos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("-")]),n._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("-")]),n._v("client\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("cloud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("nacos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("discovery")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("server-addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("8848")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#Nacos服务注册中心地址")]),n._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#配置")]),n._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("server-addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[n._v("8848")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#Nacos作为配置中心地址")]),n._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[n._v("file-extension")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" yaml "),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#指定yaml格式的配置 --读取yml格式")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#        group: DEV_GROUP")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("#        namespace: 7d8f0f5a-6a53-4785-9686-dd460158e5d4")]),n._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ${spring.application.name}-${spring.profile.active}.${spring.cloud.nacos.config.file-extension}")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# nacos-config-client-dev.yaml")]),n._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# nacos-config-client-test.yaml   ----\x3e config.info")]),n._v("\n\n")])])]),a("p",[n._v("application")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("spring:\n  profiles:\n    active: dev #开发环境\n")])])]),a("p",[n._v("主启动 : 添加@EnableDiscoveryClient  注册进注册中心nacos")]),n._v(" "),a("p",[n._v("业务类 @RefreshScope动态刷新")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('@RestController\n@Slf4j\n//支持Nacos的动态配置刷新\n@RefreshScope\npublic class ConfigClientController {\n\n    @Value("${config.info}")\n    private String configInfo;\n\n    @GetMapping("/config/info")\n    public  String getConfigInfo(){\n        return configInfo;\n    }\n}\n')])])]),a("h2",{attrs:{id:"在nacos中添加配置信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在nacos中添加配置信息"}},[n._v("#")]),n._v(" "),a("strong",[n._v("在Nacos中添加配置信息")])]),n._v(" "),a("p",[a("strong",[n._v("Nacos中的dataid的组成格式及与SpringBoot配置文件中的匹配规则")])]),n._v(" "),a("p",[n._v("说明：之所以需要配置spring.application.name，是因为它是构成Nacos配置管理dataId 字段的一部分。")]),n._v(" "),a("p",[n._v("在 Nacos Spring Cloud中,dataId的完整格式如下：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("${prefix}-${spring-profile.active}.${file-extension}\n\n")])])]),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[n._v("1. prefix默认为spring.application.name的值，也可以通过配置项spring.cloud.nacos.config.prefix来配置。\n2. spring.profile.active即为当前环境对应的 profile，详情可以参考 Spring Boot文档。注意：当spring.profile.active为空时，对应的连接符 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("-")]),n._v(" 也将不存在，datald 的拼接格式变成$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(".$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("-")]),n._v("extension"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n3. file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("-")]),n._v("exetension为配置内容的数据格式，可以通过配置项spring .cloud.nacos.config.file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("-")]),n._v("extension来配置。目前只支持properties和yaml类型。\n通过Spring Cloud 原生注解@RefreshScope实现配置自动更新。\n\n")])])]),a("p",[a("img",{attrs:{src:t(533),alt:"image-20220103221259539"}})]),n._v(" "),a("p",[n._v("命令匹配规则:  服务名 - 开发环境 .配置文件数据格式(yaml  , 如果是yml会报错)")]),n._v(" "),a("p",[n._v("nacos添加: ( 注意: 此时nacos添加没有提示，要符合配置书写规范 冒号，缩进)")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('config:\n    info: "config info for dev,from nacos config center!"\n')])])]),a("p",[n._v("测试")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("启动前需要在nacos客户端-配置管理-配置管理栏目下有对应的yaml配置文件\n运行cloud-config-nacos-client3377的主启动类\n调用接口查看配置信息 - http://localhost:3377/config/info\n")])])]),a("p",[n._v("自带动态刷新   @RefreshScope")]),n._v(" "),a("p",[n._v("修改下Nacos中的yaml配置文件，再次调用查看配置的接口，就会发现配置已经刷新。")])])}),[],!1,null,null,null);a.default=e.exports},533:function(n,a,t){n.exports=t.p+"assets/img/20220103221306.ac0589bf.png"}}]);