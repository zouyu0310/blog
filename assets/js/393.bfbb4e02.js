(window.webpackJsonp=window.webpackJsonp||[]).push([[393],{1018:function(e,s,r){"use strict";r.r(s);var a=r(14),d=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"一、获取-redis-镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、获取-redis-镜像"}},[e._v("#")]),e._v(" 一、获取 redis 镜像")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docker search redis\ndocker pull redis:5.0.5\ndocker images\n")])])]),s("h1",{attrs:{id:"二、创建容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、创建容器"}},[e._v("#")]),e._v(" 二、创建容器")]),e._v(" "),s("p",[e._v("创建宿主机 redis 容器的数据和配置文件目录")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 这里我们在 /home/docker 下创建\nmkdir /home/docker/redis/{conf,data} -p\ncd /home/docker/redis\n")])])]),s("p",[s("strong",[e._v("注意：后面所有的操作命令都要在这个目录"),s("code",[e._v("/home/docker/redis")]),e._v("下进行")])]),e._v(" "),s("p",[e._v("获取 redis 的默认配置模版")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 获取 redis 的默认配置模版\n# 这里主要是想设置下 redis 的 log / password / appendonly\n# redis 的 docker 运行参数提供了 --appendonly yes 但没 password\nwget https://raw.githubusercontent.com/antirez/redis/4.0/redis.conf -O conf/redis.conf\n\n# 直接替换编辑\nsed -i 's/logfile \"\"/logfile \"access.log\"/' conf/redis.conf;\nsed -i 's/# requirepass foobared/requirepass 123456/' conf/redis.conf;\nsed -i 's/appendonly no/appendonly yes/' conf/redis.conf;\nsed -i 's/bind 127.0.0.1/bind 0.0.0.0/' conf/redis.conf;\n")])])]),s("blockquote",[s("p",[e._v("protected-mode 是在没有显式定义 bind 地址（即监听全网段），又没有设置密码 requirepass时，protected-mode 只允许本地回环 127.0.0.1 访问。改为bind 0.0.0.0")])]),e._v(" "),s("p",[e._v("创建并运行一个名为 myredis 的容器,放到start-redis.sh脚本里面")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 创建并运行一个名为 myredis 的容器\ndocker run \\\n-p 6379:6379 \\\n-v $PWD/data:/data \\\n-v $PWD/conf/redis.conf:/etc/redis/redis.conf \\\n--privileged=true \\\n--name myredis \\\n-d redis:5.0.5 redis-server /etc/redis/redis.conf\n\n# 命令分解\ndocker run \\\n-p 6379:6379 \\ # 端口映射 宿主机:容器\n-v $PWD/data:/data:rw \\ # 映射数据目录 rw 为读写\n-v $PWD/conf/redis.conf:/etc/redis/redis.conf:ro \\ # 挂载配置文件 ro 为readonly\n--privileged=true \\ # 给与一些权限\n--name myredis \\ # 给容器起个名字\n-d redis redis-server /etc/redis/redis.conf # deamon 运行容器 并使用配置文件启动容器内的 redis-server \n")])])]),s("p",[e._v("查看活跃的容器")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 查看活跃的容器\ndocker ps\n# 如果没有 myredis 说明启动失败 查看错误日志\ndocker logs myredis\n# 查看 myredis 的 ip 挂载 端口映射等信息\ndocker inspect myredis\n# 查看 myredis 的端口映射\ndocker port myredis\n")])])]),s("h2",{attrs:{id:"三、访问-redis-容器服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、访问-redis-容器服务"}},[e._v("#")]),e._v(" 三、访问 redis 容器服务")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("docker exec -it myredis bash\nredis-cli\n")])])]),s("h2",{attrs:{id:"四、开启防火墙端口-提供外部访问"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、开启防火墙端口-提供外部访问"}},[e._v("#")]),e._v(" 四、开启防火墙端口，提供外部访问")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("firewall-cmd --zone=public --add-port=6379/tcp --permanent\nfirewall-cmd --reload\nfirewall-cmd --query-port=6379/tcp\n")])])])])}),[],!1,null,null,null);s.default=d.exports}}]);