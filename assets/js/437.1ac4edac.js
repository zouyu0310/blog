(window.webpackJsonp=window.webpackJsonp||[]).push([[437],{1083:function(s,t,n){"use strict";n.r(t);var e=n(14),a=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"_40-ribbon默认负载轮询算法原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_40-ribbon默认负载轮询算法原理"}},[s._v("#")]),s._v(" 40_Ribbon默认负载轮询算法原理")]),s._v(" "),t("p",[s._v("默认负载轮训算法: rest接口第几次请求数 % 服务器集群总数量 = 实际调用服务器位置下标，每次服务重启动后rest接口计数从1开始。")]),s._v(" "),t("p",[s._v("List"),t("Servicelnstance",[s._v(' instances = discoveryClient.getInstances("CLOUD-PAYMENT-SERVICE");')])],1),s._v(" "),t("p",[s._v("如:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("List [0] instances = 127.0.0.1:8002\nList [1] instances = 127.0.0.1:8001\n")])])]),t("p",[s._v("8001+ 8002组合成为集群，它们共计2台机器，集群总数为2，按照轮询算法原理：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("当总请求数为1时:1%2=1对应下标位置为1，则获得服务地址为127.0.0.1:8001\n当总请求数位2时:2%2=О对应下标位置为0，则获得服务地址为127.0.0.1:8002\n当总请求数位3时:3%2=1对应下标位置为1，则获得服务地址为127.0.0.1:8001\n当总请求数位4时:4%2=О对应下标位置为0，则获得服务地址为127.0.0.1:8002\n如此类推…\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);