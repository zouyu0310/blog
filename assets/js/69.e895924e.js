(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{1118:function(n,a,e){"use strict";e.r(a);var t=e(14),r=Object(t.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"_98-nacos之服务提供者注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_98-nacos之服务提供者注册"}},[n._v("#")]),n._v(" 98_Nacos之服务提供者注册")]),n._v(" "),a("p",[a("a",{attrs:{href:"https://spring-cloud-alibaba-group.github.io/github-pages/greenwich/spring-cloud-alibaba.html#_spring_cloud_alibaba_nacos_discovery",target:"_blank",rel:"noopener noreferrer"}},[n._v("官方文档"),a("OutboundLink")],1)]),n._v(" "),a("p",[n._v("新建Module - cloudalibaba-provider-payment9001")]),n._v(" "),a("p",[n._v("POM")]),n._v(" "),a("p",[n._v("父POM")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("        \x3c!--spring cloud alibaba 2.1.0.RELEASE--\x3e\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-alibaba-dependencies</artifactId>\n            <version>2.1.0.RELEASE</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n\n")])])]),a("p",[n._v("本模块")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" <dependencies>\n        \x3c!--SpringCloud ailibaba nacos --\x3e\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n        </dependency>\n        \x3c!-- SpringBoot整合Web组件 --\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-actuator</artifactId>\n        </dependency>\n        \x3c!--日常通用jar包配置--\x3e\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n")])])]),a("p",[n._v("yml")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("server:\n  port: 9001\n\nspring:\n  application:\n    name: nacos-payment-provider\n  cloud:\n    nacos:\n      discovery:\n        server-addr: localhost:8848 #配置Nacos地址\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: '*'\n\n")])])]),a("p",[n._v("主启动")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("@SpringBootApplication\n@EnableDiscoveryClient\npublic class PaymentMain9001 {\n    public static void main(String[] args) {\n        SpringApplication.run(PaymentMain9001.class, args);\n    }\n}\n")])])]),a("p",[n._v("业务类")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('@RestController\n@Slf4j\npublic class PaymentController {\n    @Value("${server.port}")\n    private String serverPort;\n\n    @GetMapping(value = "/payment/nacos/{id}")\n    public String getPayment(@PathVariable("id") Integer id) {\n        return "nacos registry, serverPort: "+ serverPort+"\\t id"+id;\n    }\n\n}\n')])])]),a("p",[n._v("测试")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("http://localhost:9001/payment/nacos/1\nnacos控制台\nnacos服务注册中心+服务提供者9001都OK了\n")])])]),a("p",[a("img",{attrs:{src:e(591),alt:"image-20220101012215339"}})]),n._v(" "),a("p",[n._v("如果新的服务注册进nacos之后会出现服务名")]),n._v(" "),a("p",[n._v("配置新的module9002后 同9001注册进nacos   -- 验证nacos自带负载均衡 用到了ribbon")]),n._v(" "),a("p",[a("img",{attrs:{src:e(592),alt:"image-20220101013213069"}})])])}),[],!1,null,null,null);a.default=r.exports},591:function(n,a,e){n.exports=e.p+"assets/img/20220101012222.9972ebb2.png"},592:function(n,a,e){n.exports=e.p+"assets/img/20220101013213.c5737733.png"}}]);