(window.webpackJsonp=window.webpackJsonp||[]).push([[499],{1169:function(t,s,r){"use strict";r.r(s);var a=r(14),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"redis事务介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis事务介绍"}},[t._v("#")]),t._v(" redis事务介绍")]),t._v(" "),s("h3",{attrs:{id:"是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#是什么"}},[t._v("#")]),t._v(" 是什么")]),t._v(" "),s("p",[t._v("官网：https://redis.io/docs/manual/transactions/")]),t._v(" "),s("p",[t._v("可以一次执行多个命令，本质是一组命令的集合，一个事务中的所有命令都会序列化，$\\textcolor{red}{按顺序地串行化执行而不会被其他命令插入，不许加塞}​$")]),t._v(" "),s("h3",{attrs:{id:"能干嘛"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#能干嘛"}},[t._v("#")]),t._v(" 能干嘛")]),t._v(" "),s("p",[t._v("一个队列中，一次性、顺序性、排他性的执行一系列命令")]),t._v(" "),s("h3",{attrs:{id:"redis事务-vs-数据库事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis事务-vs-数据库事务"}},[t._v("#")]),t._v(" Redis事务 VS 数据库事务")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("1.单独的隔离操作")]),t._v(" "),s("th",[t._v("Redis的事务仅仅是保证事务里的操作会被连续独占的执行，redis命令执行是单线程架构，在执行完事务内所有指令前是不可能再去同时执行其他客户端的请求的")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("2.没有隔离级别的概念")]),t._v(" "),s("td",[t._v("因为事务提交前任何指令都不会被实际执行，也就不存在”事务内的查询要看到事务里的更新，在事务外查询不能看到”这种问题了")])]),t._v(" "),s("tr",[s("td",[t._v("3.不保证原子性")]),t._v(" "),s("td",[t._v("Redis的事务不保证原子性，也就是不保证所有指令同时成功或同时失败，只有决定是否开始执行全部指令的能力，没有执行到一半进行回滚的能力")])]),t._v(" "),s("tr",[s("td",[t._v("4.排它性")]),t._v(" "),s("td",[t._v("Redis会保证一个事务内的命令依次执行，而不会被其它命令插入")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);