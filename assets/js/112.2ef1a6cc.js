(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{697:function(a,s,e){"use strict";e.r(s);var t=e(14),n=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("hr"),a._v(" "),s("ol",[s("li",[a._v("确定你是CentOS7及以上版本")])]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("cat /etc/redhat-release\n")])])]),s("h2",{attrs:{id:"安装步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装步骤"}},[a._v("#")]),a._v(" 安装步骤")]),a._v(" "),s("p",[a._v("官网安装参考手册：https://docs.docker.com/engine/install/centos/")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("yum安装gcc相关环境（需要确保虚拟机可以上外网 ）")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" gcc\nyum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" gcc-c++\n")])])])]),a._v(" "),s("li",[s("p",[a._v("卸载旧版本")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum remove "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-client "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-client-latest "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-common "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-latest "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-latest-logrotate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-logrotate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n                  docker-engine\n")])])])]),a._v(" "),s("li",[s("p",[a._v("安装需要的软件包")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" yum-utils\n或者\nyum "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-y")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" yum-utils device-mapper-persistent-data lvm2\n")])])])]),a._v(" "),s("li",[s("p",[a._v("设置镜像仓库")]),a._v(" "),s("p",[a._v("官网（国外）：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum-config-manager "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --add-repo "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    https://download.docker.com/linux/centos/docker-ce.repo\n")])])]),s("p",[a._v("阿里云（推荐）：")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])])]),a._v(" "),s("li",[s("p",[a._v("更新yum软件包索引")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("yum makecache fast\n")])])])]),a._v(" "),s("li",[s("p",[a._v("安装 Docker CE")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" docker-ce docker-ce-cli containerd.io\n")])])])]),a._v(" "),s("li",[s("p",[a._v("启动 Docker")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[a._v("systemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),s("p",[a._v("至此，已经安装完")])])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("查看版本")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" version\n")])])])]),a._v(" "),s("li",[s("p",[a._v("查看安装的镜像")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" images\n")])])])]),a._v(" "),s("li",[s("p",[a._v("测试运行hello")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run hello-world\n")])])])])]),a._v(" "),s("ul",[s("li",[s("p",[a._v("重启docker")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("systemctl daemon-reload\n\nsystemctl restart docker\n")])])])]),a._v(" "),s("li",[s("p",[a._v("设置docker开启自启")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("systemctl enable docker\n")])])])])]),a._v(" "),s("h2",{attrs:{id:"安装docker-compose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装docker-compose"}},[a._v("#")]),a._v(" 安装docker compose")]),a._v(" "),s("p",[a._v("参考官方: https://docs.docker.com.zh.xy2401.com/compose/install/")]),a._v(" "),s("p",[a._v("运行以下命令以下载Docker Compose的当前稳定版本：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('curl -L "https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose\n')])])]),s("p",[a._v("将可执行权限应用于二进制文件：")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("chmod +x /usr/local/bin/docker-compose\n")])])]),s("p",[a._v("测试安装。")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker-compose --version\n")])])]),s("h2",{attrs:{id:"安装mysql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装mysql"}},[a._v("#")]),a._v(" 安装mysql")]),a._v(" "),s("p",[a._v("数据放在数据盘")]),a._v(" "),s("p",[a._v("如: /mnt")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("并在盘下创建docker数据文件\n\nmkdir dockerData\n")])])]),s("p",[a._v("创建compose文件夹")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("mkdir dockerCompose\n")])])]),s("hr"),a._v(" "),s("p",[a._v("/mnt/dockerData/dockerCompose  下 创建 docker-compose.yml 文件")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("touch docker-compose.yml\n")])])]),s("p",[a._v("docker-compose.yml配置")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("version: '3'\nservices:\n  mysql:                                            #mysql服务节点\n    image: mysql:8.0.33                                #mysql镜像，如果镜像容器没有会去自动拉取\n    container_name: mysqlcompose3306                           #容器的名称\n    command:                                        #构建容器后所执行的命令\n      --character-set-server=utf8mb4\n      --collation-server=utf8mb4_unicode_ci\n      --lower-case-table-names=1    #忽略数据表明大小写 \n    restart: always                                 #跟随docker的启动而启动\n    environment:\n      MYSQL_ROOT_PASSWORD: Qianyan89892528                     #设置root帐号密码\n      SET_CONTAINER_TIMEZONE: true\n      CONTAINER_TIMEZONE: Asia/Shanghai                       #time\n    ports:\n      - 3306:3306\n    volumes:\n      - /mnt/dockerData/mysql/data:/var/lib/mysql           #数据文件挂载\n      - /mnt/dockerData/mysql/conf.d:/etc/mysql/conf.d      #配置文件挂载\n      - /mnt/dockerData/mysql/log:/var/log/mysql            #日志文件挂载\n      - /etc/localtime:/etc/localtime\n\n")])])]),s("p",[a._v("说明:")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("数据存放地址:  /mnt/dockerData/mysql/data")])]),a._v(" "),s("li",[s("p",[a._v("因上述 volumes 中做了配置映射,所以需要在  /mnt/dockerData/mysql/conf.d 文件下创建 my.cnf文件")])])]),a._v(" "),s("p",[a._v("my.cnf配置:")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("[mysqld]\n\nport=3306\n\n# 数据存放的地方\ndatadir=/var/lib/mysql\n# 连接的地方\n#socket=/data/mysql/mysql.sock\n# 错误日志输出地方\n#log-error=/data/dockerData/mysql/errorlog\n# 进程文件\n#pid-file=/data/mysql/run/mysqld/mysqld.pid\n# 缓存的地方\n#tmpdir=/data/dockerData/mysql/tmp\n# 分组权限\nsql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION\n# 大小写敏感\nlower_case_table_names=1\n\nlog-bin=mysql100-master\nserver-id=4\n# 开启binlog\n#log_bin= mysql-bin\n#log_bin_basename=/opt/mysql/mysql-bin\n#log_bin_index=/opt/mysql/mysql-bin.index\ninnodb_buffer_pool_size=4G\ninnodb_io_capacity= 20000\nmax_allowed_packet=256M\nkey_buffer_size= 2048M\ncharacter-set-server=utf8\ndefault-storage-engine=InnoDB\nmax_connections = 5000\nmax_connect_errors = 6000\nthread_cache_size = 64\ninnodb_open_files = 500\nmyisam_max_sort_file_size=100G\nmyisam_sort_buffer_size=35M\ninnodb_flush_log_at_trx_commit=1\ninnodb_thread_concurrency=18\nbinlog_cache_size = 32768\nmax_heap_table_size = 16M\ntmp_table_size = 512M\njoin_buffer_size = 16M\nsort_buffer_size = 16M\nread_rnd_buffer_size = 8M \nread_buffer_size = 2M\ninteractive_timeout = 28800\nwait_timeout = 28800\nlog_bin_trust_function_creators = ON\ntransaction_isolation = REPEATABLE-READ\nbinlog_format = ROW\nexpire_logs_days = 7\nslow_query_log = 0\n#慢日志目录\nslow_query_log_file=/data/dockerData/mysql/lib/mysql/mysql100-slow.log\n#等待时间超过5s算慢日志 \nlong_query_time = 20\nlog_slave_updates = true\nback_log = 600\ninnodb_file_per_table = ON\nopen_files_limit = 65535\ntable_open_cache = 512\ninnodb_write_io_threads = 32\ninnodb_read_io_threads = 32\ninnodb_purge_threads = 1\ninnodb_log_buffer_size = 2M\ninnodb_log_file_size = 32M\ninnodb_max_dirty_pages_pct = 90\nbulk_insert_buffer_size = 8M\ngroup_concat_max_len=102400\n\n[mysql] \n\n# 客户端配置 # \n\nport= 3306 \n\nsocket=/data/mysql/mysql.sock \n\ndefault-character-set= utf8\n\n")])])]),s("p",[a._v("进去/mnt/dockerData/dockerCompose")]),a._v(" "),s("p",[a._v("找到docker-compose.yml")]),a._v(" "),s("p",[a._v("docker-compose 后台运行")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker compose up -d\n")])])]),s("p",[a._v("-d 为后台运行命令")]),a._v(" "),s("h2",{attrs:{id:"假如数据库服务停止了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#假如数据库服务停止了"}},[a._v("#")]),a._v(" 假如数据库服务停止了")]),a._v(" "),s("p",[a._v("进去  /mnt/dockerData/dockerCompose  执行, (如果容器存在 那么会自动重启,如果容器不存在 他会帮你下载并开启一个新容器,把数据映射进去)")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("docker compose up -d\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);