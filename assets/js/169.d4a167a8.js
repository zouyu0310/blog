(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{761:function(s,r,t){"use strict";t.r(r);var e=t(14),a=Object(e.a)({},(function(){var s=this,r=s._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h2",{attrs:{id:"联结表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#联结表"}},[s._v("#")]),s._v(" 联结表")]),s._v(" "),r("h3",{attrs:{id:"连结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#连结"}},[s._v("#")]),s._v(" 连结")]),s._v(" "),r("h4",{attrs:{id:"关系表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关系表"}},[s._v("#")]),s._v(" 关系表")]),s._v(" "),r("p",[s._v("例如：两个表，一个存储供应商信息，另一个存储产品信息。vendors表包含所有供应商信息，每个供应商占一行，每个供应商应具有唯一的标识，称为主键（primary key）。products表只存储产品信息，除了存储供应商ID之外不存储其他的供应商信息。vendors表的主键又叫products的外键，它将vendors表与products表关联，利用供应商ID能从vendors表中找出相应供应商的详细信息。")]),s._v(" "),r("p",[s._v("外键：外键为某个表中的一列，它包含另一个表的主键值，定义了两个表之间的关系。")]),s._v(" "),r("p",[s._v("例：定义外键")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("ALTER TABLE orderitems\nADD CONSTRAINT fk_irderitems_orders\nFOREIGN KEY (order_num) REFERENCES orders(order_num);\n\nALTER TABLE orderitems\nADD CONSTRAINT fk_irderitems_products\nFOREIGN KEY (prod_id) REFERENCES products(prod_id);\n\nALTER TABLE orders\nADD CONSTRAINT fk_irderitems_customers\nFOREIGN KEY (cust_id) REFERENCES customers(cust_id);\n\nALTER TABLE products\nADD CONSTRAINT fk_irderitems_vendors\nFOREIGN KEY (vend_id) REFERENCES vendors(vend_id);\n")])])]),r("p",[s._v("在使用关系表时，仅在关系列中插入合法的数据非常重要，如果在products表中插入拥有非法供应商ID（即没有在vendors表中出现）的供应商生产的产品，则这些产品是不可访问的，因为它们没有关联到某个供应商。")]),s._v(" "),r("h3",{attrs:{id:"创建连结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建连结"}},[s._v("#")]),s._v(" 创建连结")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT vend_name, prod_name, prod_price FROM vendors, products\nWHERE vendors.vend_id = products.vend_id\nORDER BY vend_name, prod_name;\n")])])]),r("p",[s._v("两个表用WHERE子句联结")]),s._v(" "),r("p",[s._v("笛卡儿积：由没有连结条件的表关系返回的结果为笛卡尔积，检索出的行的数目将是第一个表中的行数乘以第二个表中的行数。")]),s._v(" "),r("h4",{attrs:{id:"内部连结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#内部连结"}},[s._v("#")]),s._v(" 内部连结")]),s._v(" "),r("p",[s._v("等值联结：基于两个表之间的相等测试，也叫内部连结")]),s._v(" "),r("p",[s._v("可以使用另一种语法来明确指定联结的类型")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT vend_name, prod_name, prod_price\nFROM vendors INNER JOIN products\nON vendors.vend_id = products.vend_id;\n")])])]),r("p",[s._v("FROM 子句的组成部分，以INNER JOIN指定，联结条件用ON子句")]),s._v(" "),r("h4",{attrs:{id:"联结多个表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#联结多个表"}},[s._v("#")]),s._v(" 联结多个表")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT prod_name, vend_name, prod_price, quantity\nFROM orderitems, products, vendors\nWHERE products.vend_id = vendors.vend_id\nAND orderitems.prod_id = products.prod_id\nAND order_num = 20005;\n#显示编号为20005的订单中的物品。订单物品存储在orderitems表中，按每个产品的ID存储。\n它引用products表中的产品。这些产品通过供应商ID联结到vendors表中相应的供应商\n")])])]),r("p",[s._v("例：返回订购产品INT2的客户列表")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT cust_name,cust_contact\nFROM customers, orders, orderitems\nWHERE customers.cust_id = orders.cust_id\nAND orderitems.order_num = orders.order_num\nAND prod_id = 'TNT2';\n")])])]),r("h2",{attrs:{id:"创建高级联结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建高级联结"}},[s._v("#")]),s._v(" 创建高级联结")]),s._v(" "),r("h3",{attrs:{id:"使用表别名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用表别名"}},[s._v("#")]),s._v(" 使用表别名")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT Concat(RTrim(vend_name),'('Rtrim(vend_country),')') AS vend_title\nFROM vendors ORDER BY vend_name;\n")])])]),r("p",[s._v("别名除了用于列名和计算字段外，SQL还允许给表起别名，这样做有两个主要理由：")]),s._v(" "),r("ul",[r("li",[s._v("缩短SQL语句")]),s._v(" "),r("li",[s._v("允许在单条SELECT语句中多次使用相同的表。")])]),s._v(" "),r("p",[s._v("例：")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT cust_name, cust_contact\nFROM customers AS c, orders AS o, orderitems AS oi\nWHERE c.cust_id = o.cust_id\nAND oi.order_num = o.order_num\nAND prod_id = 'TNT2';\n")])])]),r("h3",{attrs:{id:"使用不同类型的联结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用不同类型的联结"}},[s._v("#")]),s._v(" 使用不同类型的联结")]),s._v(" "),r("h4",{attrs:{id:"自联结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自联结"}},[s._v("#")]),s._v(" 自联结")]),s._v(" "),r("p",[s._v("例：如果某物品（ID为DTNTR）存在问题，因此想知道生产该物品的供应商生产的其他物品是否也存在这些问题。此查询要求首先找到ID为DTNTR的物品的供应商，然后找出这个供应商生产的其他物品。")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("#子查询\nSELECT prod_id, prod_name\nFROM products\nWHERE vend_id = (SELECT vend_id FROM products WHERE prod_id = 'DTNTR');\n#output\n+---------+----------------+\n| prod_id | prod_name      |\n+---------+----------------+\n| DTNTR   | Detonator      |\n| FB      | Bird seed      |\n| FC      | Carrots        |\n| SAFE    | Safe           |\n| SLING   | Sling          |\n| TNT1    | TNT (1 stick)  |\n| TNT2    | TNT (5 sticks) |\n+---------+----------------+\n#使用自联结\nSELECT p1.prod_id, p1.prod_name\nFROM products AS p1, products AS p2\nWHERE p1.vend_id = p2.vend_id\nAND p2.prod_id = 'DTNTR';\n")])])]),r("h4",{attrs:{id:"自然联结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自然联结"}},[s._v("#")]),s._v(" 自然联结")]),s._v(" "),r("p",[s._v("无论何时对表进行联结，应该至少有一个列出现在不止一个表中（被联结的列）。标准的联结（内部联结）返回所有数据，甚至相同的列多次出现，自然联结排除多次出现，使每个列只返回一次。")]),s._v(" "),r("p",[s._v("自然联结是这样一种联结，其中你只能选择那些唯一的列，这一版是通过使用通配符，对所有其他表的列使用明确的字集来完成的。")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT c.*, o.order_num, o.order_date, oi.prod_id, oi.quantity, oi.item_price\nFROM customers AS c, orders AS o, orderitems AS oi\nWHERE c.cust_id = o.cust_id\nAND oi.order_num = o.order_num\nAND prod_id = 'FB';\n")])])]),r("p",[s._v("这个例子中，通配符只对第一个表使用所有其他列明确列出，所以没有重复的列被检索出来。")]),s._v(" "),r("h4",{attrs:{id:"外部联结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#外部联结"}},[s._v("#")]),s._v(" 外部联结")]),s._v(" "),r("p",[s._v("有时候需要包含没有关联的那些行")]),s._v(" "),r("p",[s._v("例：需要联结来完成以下工作")]),s._v(" "),r("ul",[r("li",[s._v("对每个客户下了多少订单进行计数，包括那些至今尚未下订单的客户")]),s._v(" "),r("li",[s._v("列出所有产品及订购数量，包括没人订购的产品")]),s._v(" "),r("li",[s._v("计算平均销售规模，包括那些至今尚未下订单的客户")])]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("#内部联结\nSELECT customers.cust_id, orders.order_num\nFROM customers INNER JOIN orders\nON customers.cust_id = orders.cust_id;\n\n#外部联结\nSELECT customers.cust_id, orders.order_num\nFROM customers LEFT OUTER JOIN orders\nON customers.cust_id = orders.cust_id;\n")])])]),r("p",[s._v("外部联结语法类似。可以检索所有客户，包括没有订单的客户。")]),s._v(" "),r("p",[s._v("在使用OUTER JOIN语法时，必须使用RIGHT或LEFT关键字指定包括其所有行的表。（RIGHT指出的是OUTER JOIN右边的表，而LEFT指出的是OUTER JOIN左边的表。）上面的例子中从customers中选择所有的行。")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT customers.cust_id, orders.order_num\nFROM customers RIGHT OUTER JOIN orders\nON orders.cust_id = customers.cust_id;\n")])])]),r("h3",{attrs:{id:"使用带聚集函数的联结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用带聚集函数的联结"}},[s._v("#")]),s._v(" 使用带聚集函数的联结")]),s._v(" "),r("p",[s._v("例：检索所有客户及每个客户所下的订单数")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT customers.cust_name, customers.cust_id, COUNT(orders.order_num) AS num_ord\nFROM customers INNER JOIN orders\nON customers.cust_id = orders.cust_id\nGROUP BY customers.cust_id;\n")])])]),r("p",[s._v("此SELECT语句使用INNER JOIN将customers和orders表互相关联。GROUP BY子句按客户分组数据，因此，函数调用COUNT(orders.order_num)对每个客户的订单计数，将它作为num_ord返回。")]),s._v(" "),r("p",[s._v("聚集函数也可以方便地与其他联结一起使用。例：")]),s._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("SELECT customers.cust_name, customers.cust_id, COUNT(orders.order_num) AS num_ord\nFROM customers LEFT OUTER JOIN orders\nON customers.cust_id = orders.cust_id\nGROUP BY customers.cust_id;\n")])])]),r("p",[s._v("这个例子使用左外部联结来包含所有客户，甚至包含那些没有任何下订单的客户。")]),s._v(" "),r("h3",{attrs:{id:"使用联结和联结条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用联结和联结条件"}},[s._v("#")]),s._v(" 使用联结和联结条件")]),s._v(" "),r("ul",[r("li",[s._v("注意所使用的联结类型，一般我们使用内部联结，但使用外部联结也是有效的。")]),s._v(" "),r("li",[s._v("保证使用正确的联结条件，否则将返回不正确的数据。")]),s._v(" "),r("li",[s._v("应该总是提供联结条件，否则会得出笛卡尔积。")]),s._v(" "),r("li",[s._v("在一个联结中可以包含多个表，甚至对于每个联结可以采用不同的联结类型。应该在一起测试他们前分别测试每个联结。")])])])}),[],!1,null,null,null);r.default=a.exports}}]);