(window.webpackJsonp=window.webpackJsonp||[]).push([[314],{946:function(t,a,n){"use strict";n.r(a);var r=n(14),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("nginx location 常用配置示例")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_40225004/article/details/119979392#root",target:"_blank",rel:"noopener noreferrer"}},[t._v("root"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_40225004/article/details/119979392#alias",target:"_blank",rel:"noopener noreferrer"}},[t._v("alias"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_40225004/article/details/119979392#rewrite",target:"_blank",rel:"noopener noreferrer"}},[t._v("rewrite"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_40225004/article/details/119979392#proxy_pass",target:"_blank",rel:"noopener noreferrer"}},[t._v("proxy_pass"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_1、location-匹配规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、location-匹配规则"}},[t._v("#")]),t._v(" 1、location 匹配规则")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://nginx.org/en/docs/http/ngx_http_core_module.html#location",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档 location"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('location = / {\n    [ configuration A ]\n}\n\nlocation / {\n    [ configuration B ]\n}\n\nlocation /documents/ {\n    [ configuration C ]\n}\n\nlocation ^~ /images/ {\n    [ configuration D ]\n}\n\nlocation ~* \\.(gif|jpg|jpeg)$ {\n    [ configuration E ]\n}\n# "/"请求将匹配 configuration A\n# "/index.html"请求将匹配 configuration B\n# "/documents/document.html"请求将匹配 configuration C\n# "/images/1.gif"请求将匹配 configuration D\n# "/documents/1.jpg"请求将匹配 configuration E\n\n')])])]),a("p",[a("strong",[t._v("以下面这个为例:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a {}  # 1\n\nlocation /b {}  # 2\n\nlocation ^~ /a/b {}  # 3\n\nlocation ~* /a.* {}  # 4\n\nlocation ~* /.* {}  # 5\n\nlocation = /a/b {}  # 6\n\n")])])]),a("p",[t._v("匹配规则是 :")]),t._v(" "),a("p",[t._v('例如，请求是 " /a/b "')]),t._v(" "),a("p",[t._v('1、完全匹配优先级最高 ( " = /a/b " ，编号6 )，匹配完成结束搜索。')]),t._v(" "),a("p",[t._v('2、如果没有完全匹配，优先找最长匹配前缀 ( 也就是 " /a/b "，编号3 ) ，再看 " /a/b " 前面有没有 ^~ 修辞')]),t._v(" "),a("p",[t._v('3、如果有 ^~ 修辞，那匹配结束，结果是 " /a/b "')]),t._v(" "),a("p",[t._v("4、如果没有 ^~ 修辞，还将继续匹配正则，正则匹配按照从上到下的顺序，如上面 编号4和5都能满足匹配规则，但是4在上面，所以结果是编号4，结束匹配")]),t._v(" "),a("p",[t._v('5、如果所有正则都没匹配上，那结果还是 " /a/b "，编号3')]),t._v(" "),a("p",[t._v("具体挑几种情况说明：")]),t._v(" "),a("p",[t._v("case 1：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a {}\n\nlocation /a/ {}\n\nlocation /b {}\n\n")])])]),a("p",[t._v('请求 " /a/b " 会匹配到第二个" /a/ " ，因为是最长匹配前缀')]),t._v(" "),a("p",[t._v("case 2 ：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a/b {}\n\nlocation /a/ {}\n\nlocation ~ /a.* {}\n\n")])])]),a("p",[t._v('请求 " /a/b " 会匹配到第三个 " ~ /a.* "，因为虽然首先匹配最长前缀是 " /a/b "，但它没有 ^~ 结束正则，所以继续正则匹配，匹配到了第三个')]),t._v(" "),a("p",[t._v("case 3：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a/b {}\n\nlocation /a/ {}\n\nlocation ~ /b.* {}\n\n")])])]),a("p",[t._v('请求 " /a/b " 会匹配到第一个 " /a/b "，首先匹配最长前缀是 " /a/b "，它没有 ^~ 结束正则，所以尝试匹配第三个，但是匹配失败，所以还是返回 " /a/b "')]),t._v(" "),a("p",[t._v("case 4：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a/b {}\n\nlocation ~ /.* {}\n\nlocation ~ /a.* {}\n\n")])])]),a("p",[t._v('请求 " /a/b " 会匹配到第二个 " ~ /.* "，首先匹配最长前缀是 " /a/b “，它没有 ^~ 结束正则，所以尝试匹配正则，” ~ /.* "在上面，所以先匹配它，匹配成功结束匹配')]),t._v(" "),a("p",[t._v("case 5：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a/b {}\n\nlocation ~ /c.* {}\n\nlocation ~ /d.* {}\n\n")])])]),a("p",[t._v('请求 " /a/b " 会匹配到第一个 " /a/b "，首先匹配最长前缀是 " /a/b “，它没有 ^~ 结束正则，所以尝试匹配正则，先匹配 " ~ /c.* " 匹配失败，再匹配” ~ /d.* " 依然失败，所以结果还是 " /a/b "')]),t._v(" "),a("p",[t._v("case 6：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location ^~ /a {}\n\nlocation ~ /a.* {}\n\n")])])]),a("p",[t._v('请求 " /a/b " 会匹配到第一个 " ^~ /a/ "，因为匹配最长前缀是 " /a "，它前面有 ^~ 结束了正则匹配')]),t._v(" "),a("p",[t._v("case 7：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location ^~ /a/b {}\n\nlocation ~ /a.* {}\n\nlocation = /a/b {}\n\n")])])]),a("p",[t._v('请求 " /a/b " 会匹配到第三个 " = /a/b "，因为匹配到了最长的 " /a/b "，它前面有 = 结束了整个匹配')]),t._v(" "),a("p",[a("strong",[t._v("总结就是：完全匹配 > ^~ 最长前缀 > 正则 > 最长前缀")])]),t._v(" "),a("p",[t._v("另外，官方文档说的")]),t._v(" "),a("p",[t._v("在 0.7.1 到 0.8.41 的版本中，如果请求匹配没有“ "),a("code",[t._v("=")]),t._v("”和“ "),a("code",[t._v("^~")]),t._v("”修饰符的前缀位置，搜索也会终止并且不检查正则表达式。")]),t._v(" "),a("h2",{attrs:{id:"_2、http-core-module-中用的两个文件访问指令-root-和-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、http-core-module-中用的两个文件访问指令-root-和-alias"}},[t._v("#")]),t._v(" 2、http_core_module 中用的两个文件访问指令， root 和 alias")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_core_module.html#alias",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档 alias"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_core_module.html#root",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档 root"),a("OutboundLink")],1)])]),t._v(" "),a("h5",{attrs:{id:"_1、root-服务器实际访问路径为-root路径-location路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、root-服务器实际访问路径为-root路径-location路径"}},[t._v("#")]),t._v(" 1、root ：服务器实际访问路径为 root路径 ＋ location路径")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a {\n\troot /b/; \n}\n# requestURI: /a/index.html    =>     匹配服务器文件: /b/a/index.html\n\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /html {\n\troot /usr/local/nginx/;\n}\n# 请求:  http://${domain}/html/a.html => 匹配服务器文件: /usr/local/nginx/html/a.html\n# 请求:  http://${domain}/html/www/a.html => 匹配服务器文件: /usr/local/nginx/html/www/a.html\n\n")])])]),a("h5",{attrs:{id:"_2、alias-服务器实际访问路径为-alias路径-去掉location路径后的请求路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、alias-服务器实际访问路径为-alias路径-去掉location路径后的请求路径"}},[t._v("#")]),t._v(" 2、alias ：服务器实际访问路径为 alias路径 ＋ 去掉location路径后的请求路径")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a/ {\nalias /b/;  \n}\n# requestURI: /a/index.html    =>     匹配服务器文件: /b/index.html\n\n")])])]),a("p",[t._v("eg:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /html {\n\talias /usr/local/nginx/;\n}\n# 请求:  http://${domain}/html/a.html => 匹配服务器文件: /usr/local/nginx/a.html\n# 请求:  http://${domain}/html/www/a.html => 匹配服务器文件: /usr/local/nginx/www/a.html\n\n#====================== 分割线 =======================================\n\nlocation /html/www {\n\talias /usr/local/nginx;\n}\n# 请求:  http://${domain}/html/www/a.html => 匹配服务器文件: /usr/local/nginx/a.html\n\n")])])]),a("h5",{attrs:{id:"_3、正则取参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、正则取参数"}},[t._v("#")]),t._v(" 3、正则取参数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location ~ ^/user/(.+\\.(?:gif|jpe?g|png))$ {\n  alias /usr/local/nginx/$1;\n}\n# 请求:  http://${domain}/user/a.jpg   =>  匹配服务器文件: /usr/local/nginx/a.jpg\n\n#====================== 分割线 =======================================\n\nlocation ~ ^/user/(.+\\.(?:gif|jpe?g|png))$ {\n  root /usr/local/nginx/$1; #这种没啥实际作用\n}\n# 请求:  http://${domain}/user/a.jpg => 匹配服务器文件: /usr/local/nginx/a.jpg/user/a.jpg\n\n")])])]),a("h5",{attrs:{id:"_4、官方文档说"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、官方文档说"}},[t._v("#")]),t._v(" 4、官方文档说")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 当 location 匹配指令值的最后一部分时：\n# 如下这种情况下：   http://xxx/images/a.jpg     =>     /data/w3/images/a.jpg\nlocation /images/ {\n alias /data/w3/images/;\n}\n\n# 最好是换成下面这种写法\n\nlocation /images/ {\n root /data/w3;\n}\n\n")])])]),a("h2",{attrs:{id:"_3、http-rewrite-module-中的-break、if、return、rewrite、set"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、http-rewrite-module-中的-break、if、return、rewrite、set"}},[t._v("#")]),t._v(" 3、http_rewrite_module 中的 break、if、return、rewrite、set")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://nginx.org/en/docs/http/ngx_http_rewrite_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("用一个案例介绍这几个指令的用法，我取名为： 动态路径转发")])]),t._v(" "),a("p",[t._v("如下代码，我想发起左边的请求，通过"),a("a",{attrs:{href:"https://so.csdn.net/so/search?q=nginx&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx"),a("OutboundLink")],1),t._v("后实际请求右边的请求")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("请求 http://xxx/server/8000/list  经过nginx =>   实际请求  http://xxx:8000/list\n请求 http://xxx/server/9000/one   经过nginx =>   实际请求  http://xxx:9000/one\n请求 http://xxx/server/${port}/${param}   经过nginx =>  实际请求  http://xxx:${port}/${param}\n\n")])])]),a("p",[t._v("那就可以这样加一个location 取出端口和参数，在nginx中重定向到 http://xxx:port / port/port/param;")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('location /server/ {\n\tset $port ""; \n\tset $param ""; \n\tif ($uri ~ "^/server/(.*)/(.*)$") {\t\n\t\tset $port $1; \n\t\tset $param $2; \n     \t rewrite ^/(.*)   http://xxx:$port/$param break; \n         # 也可以用 proxy_pass 加 break; 如下\n         # proxy_pass   http://139.9.137.157:$port/$param;\n         # break; (这里的break不能像rewrite里的一样放屁股上)\n\t}\n    return 400; \n}\n\n')])])]),a("p",[t._v("简单介绍一下这个配置的意思")]),t._v(" "),a("p",[t._v("例如，请求的URL 为 http://xxx/server/9000/one")]),t._v(" "),a("p",[t._v("1、定义两个变量 port 和 param 都为空串")]),t._v(" "),a("p",[t._v("2、如果请求的uri 匹配 这样的正则，取出两个参数，第一个参数为 9000，第二个参数为 one")]),t._v(" "),a("p",[t._v("3、将参数1 (9000) 赋值给变量 port ， 将参数2 (one) 赋值给变量 param")]),t._v(" "),a("p",[t._v("4、重定向整个路径到http://xxx:p o r t / port/port/param 也就是（ http://xxx:9000/one），break表示停止处理当前指令集，也就是不再进行后续的匹配等操作")]),t._v(" "),a("p",[t._v("5、如果上面的if 条件不满足，就返回 400 状态码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('location /server/ {\n\tset $port ""; # 定义变量 port\n\tset $param ""; # 定义变量 param  都为空串\n\tif ($uri ~ "^/server/(.*)/(.*)$") {\t# 如果请求的uri 匹配 这样的正则，取出两个参数\n\t\tset $port $1; # 将参数1，赋值给port\n\t\tset $param $2; # 将参数2，赋值给param\n     \trewrite ^/(.*)   http://xxx:$port/$param break; # 重定向整个路径到http://localhost:$port/$param，break表示停止处理当前指令集，也就是不再进行后续的匹配等操作\n\t}\n    return 400; # 如果uri没有匹配上上面的正则，返回400 状态码\n}\n\n')])])]),a("p",[a("strong",[t._v("第二个案例演示一下文件访问")])]),t._v(" "),a("p",[t._v("假如我的 nginx.conf 中 已经有了如下的location")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /html {\n\troot /usr/local/nginx/;\n}\n\n")])])]),a("p",[t._v("按照root指令的规则，访问 http://xxxxxx/html/a.html 实际就能访问到 /usr/local/nginx/html/a.html。")]),t._v(" "),a("p",[t._v("现在要求：")]),t._v(" "),a("p",[t._v("访问: https://xxxxxx/html/page1 能访问到 /usr/local/nginx/html/1.html")]),t._v(" "),a("p",[t._v("访问: https://xxxxxx/html/page2 能访问到 /usr/local/nginx/html/2.html")]),t._v(" "),a("p",[t._v("访问: https://xxxxxx/html/pagen 能访问到 /usr/local/nginx/html/n.html")]),t._v(" "),a("p",[t._v("那就可以这样再加一个location解决，获取uri中的参数，然后组装，转发到原来的location")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 原来的\nlocation /html {\n\troot /usr/local/nginx/;\n}\n\n# 新加一个\nlocation /html/page {\n\trewrite ^/html/page(.*)$ /html/$1.html last;  # 获取page后面的数字n，然后转到 /html/n.html，last表示停止处理当前的指令集 并开始搜索与更改的 URI 匹配的新位置\n}\n\n")])])]),a("p",[t._v("简单介绍一下这个配置的意思")]),t._v(" "),a("p",[t._v("例如，请求的URL 为 https://xxx/html/pagea （注意: /html 和 /html/page 都会匹配上这个请求， 但是 /html/page 比 /html 长，所以会使用下面这个loocation")]),t._v(" "),a("p",[t._v("rewrite ^/html/page(.*)$ /html/$1.html : 意思是将page后面的 a 提取出来，然后转到 (不是重定向) /html/$1.html ，也就是 /html/a.html")]),t._v(" "),a("p",[t._v("last表示停止处理当前的指令集 并开始搜索与更改的 URI 匹配的新位置，也就是重新去匹配 /html/a.html，当然就匹配到了原来的/html")]),t._v(" "),a("h2",{attrs:{id:"_4、http-proxy-module-中的代理设置指令-proxy-pass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、http-proxy-module-中的代理设置指令-proxy-pass"}},[t._v("#")]),t._v(" 4、http_proxy_module 中的代理设置指令， proxy_pass")]),t._v(" "),a("p",[t._v("proxy_pass 应该也是最常用的指令之一了")]),t._v(" "),a("p",[a("strong",[t._v("还是用几个案例介绍一下用法")])]),t._v(" "),a("h5",{attrs:{id:"_1、proxy-pass-中有-uri-的情况-location-中的部分将被替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、proxy-pass-中有-uri-的情况-location-中的部分将被替换"}},[t._v("#")]),t._v(" 1、proxy_pass 中有 uri 的情况，location 中的部分将被替换")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a/ {\n    proxy_pass http://xxx/b/;\n}\n# 请求  http://xxx/a/list     将代理到=>    http://xxx/b/list\n\n")])])]),a("p",[t._v("eg：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /name/ {\n    proxy_pass http://127.0.0.1/remote/;\n}\n# 请求  http://xxx/name/list     将代理到=>   http://127.0.0.1/remote/list      \n\n")])])]),a("h5",{attrs:{id:"_2、proxy-pass-中没有-uri-的情况-将原始的uri-拼接到-proxy-pass-中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、proxy-pass-中没有-uri-的情况-将原始的uri-拼接到-proxy-pass-中"}},[t._v("#")]),t._v(" 2、proxy_pass 中没有 uri 的情况，将原始的uri 拼接到 proxy_pass 中")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /a/list {\n    proxy_pass http://xxx;\n}\n# 请求  http://xxx/a/list     将代理到=>    http://xxx/a/list\n\n")])])]),a("p",[t._v("eg：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("location /name/list/ {\n    proxy_pass http://127.0.0.1;\n}\n# 请求  http://xxx/name/list     代理到=>   http://127.0.0.1/name/list    \n\n")])])]),a("h5",{attrs:{id:"_3、获取uri上的参数-拼装到-proxy-pass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、获取uri上的参数-拼装到-proxy-pass"}},[t._v("#")]),t._v(" 3、获取uri上的参数，拼装到 proxy_pass")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('location /name {\n\tif ($uri ~ "^/name/(.*)$") {\n    \tproxy_pass http://127.0.0.1:9011/$1;\n         break;\n        }\n    return 400;\n}\n# 请求  http://xxx/name/a.html     代理到=>   http://127.0.0.1:9011/a.html \n\n')])])])])}),[],!1,null,null,null);a.default=e.exports}}]);